// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FeaturedPlaylists /> snapshot 1`] = `
.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 20px;
}

.c7 {
  width: 55px;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c6 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c4 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  padding: 20px;
}

.c8 {
  background: #151515;
  min-height: 150px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding: 20px;
}

.c9 {
  width: 100%;
  max-width: 1200px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #fff;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c10 {
  margin-bottom: 20px;
}

.c11 {
  width: 50px;
}

.c1 {
  background: #ea1d2c;
  height: 50px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c2 {
  width: 100%;
  padding: 0 20px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c3 {
  width: 120px;
}

.c0 {
  height: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

@media (min-width:415px) {
  .c4 {
    width: 80%;
    max-width: 1200px;
    padding: 20px 0;
  }
}

@media (min-width:710px) {
  .c9 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:710px) {
  .c12 {
    padding: 0 20px;
  }
}

@media (min-width:415px) {
  .c2 {
    width: 80%;
    max-width: 1200px;
    padding: 0;
  }
}

<FeaturedPlaylists>
  <styled.div>
    <div
      className="c0"
    >
      <Header>
        <styled.header>
          <header
            className="c1"
          >
            <styled.h1>
              <h1
                className="c2"
              >
                <styled.img
                  alt="Spotifood logo"
                  src="logo.png"
                >
                  <img
                    alt="Spotifood logo"
                    className="c3"
                    src="logo.png"
                  />
                </styled.img>
              </h1>
            </styled.h1>
          </header>
        </styled.header>
      </Header>
      <styled.main>
        <main
          className="c4"
        >
          <Memo(Filter)
            filter={null}
            metadata={Array []}
            onFilter={[Function]}
            onTextChange={[Function]}
          >
            <styled.div>
              <div
                className="c5"
              >
                <Styled(Input)
                  icon={true}
                  placeholder="intl::search"
                >
                  <Input
                    className="c6"
                    icon={true}
                    placeholder="intl::search"
                    type="text"
                  >
                    <div
                      className="ui icon input c6"
                    >
                      <input
                        key=".0"
                        onChange={[Function]}
                        placeholder="intl::search"
                        type="text"
                      />
                      <Icon
                        as="i"
                        key=".1"
                        name="search"
                      >
                        <i
                          aria-hidden="true"
                          className="search icon"
                          onClick={[Function]}
                        />
                      </Icon>
                    </div>
                  </Input>
                </Styled(Input)>
                <styled.div>
                  <div
                    className="c7"
                  >
                    <Button
                      as="button"
                      basic={true}
                      circular={true}
                      icon="filter"
                      onClick={[Function]}
                    >
                      <Ref
                        innerRef={
                          Object {
                            "current": @media (min-width:415px) {

}

@media (min-width:710px) {

}

@media (min-width:710px) {

}

@media (min-width:415px) {

}

<button
                              class="ui basic circular icon button"
                            >
                              <i
                                aria-hidden="true"
                                class="filter icon"
                              />
                            </button>,
                          }
                        }
                      >
                        <RefFindNode
                          innerRef={
                            Object {
                              "current": <button
                                class="ui basic circular icon button"
                              >
                                <i
                                  aria-hidden="true"
                                  class="filter icon"
                                />
                              </button>,
                            }
                          }
                        >
                          <button
                            className="ui basic circular icon button"
                            onClick={[Function]}
                          >
                            <Icon
                              as="i"
                              name="filter"
                            >
                              <i
                                aria-hidden="true"
                                className="filter icon"
                                onClick={[Function]}
                              />
                            </Icon>
                          </button>
                        </RefFindNode>
                      </Ref>
                    </Button>
                    <FilterModal
                      filter={null}
                      metadata={Array []}
                      onClose={[Function]}
                      onSubmit={[Function]}
                      open={false}
                    >
                      <Modal
                        centered={false}
                        closeOnDimmerClick={true}
                        closeOnDocumentClick={false}
                        dimmer={true}
                        eventPool="Modal"
                        onClose={[Function]}
                        open={false}
                        size="tiny"
                      >
                        <Portal
                          closeOnDocumentClick={false}
                          closeOnEscape={true}
                          eventPool="Modal"
                          mountNode={
                            @media (min-width:415px) {

}

@media (min-width:710px) {

}

@media (min-width:710px) {

}

@media (min-width:415px) {

}

<body />
                          }
                          onClose={[Function]}
                          onMount={[Function]}
                          onOpen={[Function]}
                          onUnmount={[Function]}
                          open={false}
                          openOnTriggerClick={true}
                        />
                      </Modal>
                    </FilterModal>
                  </div>
                </styled.div>
              </div>
            </styled.div>
            <TagList
              formatter={[Function]}
              items={null}
              onDeleteTag={[Function]}
              title="intl::filters"
            />
          </Memo(Filter)>
          <Loading>
            <Dimmer
              active={true}
              inverted={true}
            >
              <DimmerInner
                active={true}
                inverted={true}
              >
                <Ref
                  innerRef={
                    Object {
                      "current": @media (min-width:415px) {

}

@media (min-width:710px) {

}

@media (min-width:710px) {

}

@media (min-width:415px) {

}

<div
                        class="ui active transition visible inverted dimmer"
                        style="display: flex;"
                      >
                        <div
                          class="content"
                        >
                          <div
                            class="ui inverted text loader"
                          />
                        </div>
                      </div>,
                    }
                  }
                >
                  <RefFindNode
                    innerRef={
                      Object {
                        "current": <div
                          class="ui active transition visible inverted dimmer"
                          style="display: flex;"
                        >
                          <div
                            class="content"
                          >
                            <div
                              class="ui inverted text loader"
                            />
                          </div>
                        </div>,
                      }
                    }
                  >
                    <div
                      className="ui active transition visible inverted dimmer"
                      onClick={[Function]}
                    >
                      <div
                        className="content"
                      >
                        <Loader
                          inverted={true}
                        >
                          <div
                            className="ui inverted text loader"
                          >
                            <FormattedMessage
                              id="loading"
                            />
                          </div>
                        </Loader>
                      </div>
                    </div>
                  </RefFindNode>
                </Ref>
              </DimmerInner>
            </Dimmer>
          </Loading>
        </main>
      </styled.main>
      <Footer>
        <styled.footer>
          <footer
            className="c8"
          >
            <styled.div>
              <div
                className="c9"
              >
                <styled.div>
                  <div
                    className="c10"
                  >
                    <styled.img
                      alt="Spotifood logo"
                      src="logo-icon.png"
                    >
                      <img
                        alt="Spotifood logo"
                        className="c11"
                        src="logo-icon.png"
                      />
                    </styled.img>
                  </div>
                </styled.div>
                <styled.div>
                  <div
                    className="c12"
                  >
                    <p>
                      <FormattedMessage
                        id="disclaimer"
                      />
                    </p>
                    <p>
                      <FormattedMessage
                        id="disclaimer.data"
                      />
                    </p>
                  </div>
                </styled.div>
              </div>
            </styled.div>
          </footer>
        </styled.footer>
      </Footer>
    </div>
  </styled.div>
</FeaturedPlaylists>
`;

{"ast":null,"code":"var _jsxFileName = \"/home/gimenezes/projects/ifood-frontend-test/src/Components/MainHeader/index.tsx\";\nimport React, { useMemo, useState } from \"react\";\nimport { Container, Profile, Welcome, Message } from \"./styles\";\nimport emojis from \"../../Utils/emojis\";\nimport ButtonTheme from \"./ButtonTheme\";\nimport { useTheme } from \"../../Hooks/themes\";\n\nconst MainHeader = () => {\n  const {\n    toggleTheme,\n    theme\n  } = useTheme();\n  const [spotTheme, setSpotTheme] = useState(() => theme.title === \"Spotify\" ? true : false);\n\n  const handleChangeTheme = () => {\n    setSpotTheme(!spotTheme);\n    toggleTheme();\n  };\n\n  const emoji = useMemo(() => {\n    const indice = Math.floor(Math.random() * emojis.length);\n    return emojis[indice];\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ButtonTheme, {\n    labelLeft: \"Ifood\",\n    labelRight: \"Spotify\",\n    checked: spotTheme,\n    onChange: handleChangeTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Profile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Welcome, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \" Ol\\xE1, \", emoji, \" FoodLover!\"), /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \" Que tal um pouco de m\\xFAsica?\")));\n};\n\nexport default MainHeader;","map":{"version":3,"sources":["/home/gimenezes/projects/ifood-frontend-test/src/Components/MainHeader/index.tsx"],"names":["React","useMemo","useState","Container","Profile","Welcome","Message","emojis","ButtonTheme","useTheme","MainHeader","toggleTheme","theme","spotTheme","setSpotTheme","title","handleChangeTheme","emoji","indice","Math","floor","random","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,QAAyC,OAAzC;AAEA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,OAA7B,EAAsCC,OAAtC,QAAoD,UAApD;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAGA,MAAMC,UAAoB,GAAG,MAAM;AACjC,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAyBH,QAAQ,EAAvC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,MACzCU,KAAK,CAACG,KAAN,KAAgB,SAAhB,GAA4B,IAA5B,GAAmC,KADK,CAA1C;;AAIA,QAAMC,iBAAiB,GAAG,MAAM;AAC9BF,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACAF,IAAAA,WAAW;AACZ,GAHD;;AAKA,QAAMM,KAAK,GAAGhB,OAAO,CAAC,MAAM;AAC1B,UAAMiB,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBd,MAAM,CAACe,MAAlC,CAAf;AACA,WAAOf,MAAM,CAACW,MAAD,CAAb;AACD,GAHoB,EAGlB,EAHkB,CAArB;AAKA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,OAAvB;AAA+B,IAAA,UAAU,EAAC,SAA1C;AAAoD,IAAA,OAAO,EAAEL,SAA7D;AAAwE,IAAA,QAAQ,EAAEG,iBAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgBC,KAAhB,gBADF,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFF,CAFF,CADF;AASD,CAzBD;;AA2BA,eAAeP,UAAf","sourcesContent":["import React, { useMemo, useState } from \"react\";\n\nimport { Container, Profile, Welcome, Message} from \"./styles\";\n\nimport emojis from \"../../Utils/emojis\";\n\nimport ButtonTheme from \"./ButtonTheme\";\nimport { useTheme } from \"../../Hooks/themes\";\n\n\nconst MainHeader: React.FC = () => {\n  const { toggleTheme, theme } = useTheme();\n  const [spotTheme, setSpotTheme] = useState(() =>\n    theme.title === \"Spotify\" ? true : false\n  );\n\n  const handleChangeTheme = () => {\n    setSpotTheme(!spotTheme);\n    toggleTheme();\n  }\n\n  const emoji = useMemo(() => {\n    const indice = Math.floor(Math.random() * emojis.length);\n    return emojis[indice];\n  }, []);\n\n  return (\n    <Container>\n      <ButtonTheme labelLeft=\"Ifood\" labelRight=\"Spotify\" checked={spotTheme} onChange={handleChangeTheme} />\n      <Profile>\n        <Welcome> Olá, {emoji} FoodLover!</Welcome>\n        <Message> Que tal um pouco de música?</Message>\n      </Profile>\n    </Container>\n  );\n};\n\nexport default MainHeader;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"/home/gimenezes/projects/ifood-frontend-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import Select from\"react-select\";// import DatePicker from 'react-datepicker';\nimport ReactDatePicker from'react-datepicker';import{useFilter}from'../../../Hooks/playlistsHook';import{getFilters}from'../../../Services/filterService';import{Form,FormItem}from\"./styles\";var PlaylistFilter=function PlaylistFilter(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),locale=_useState2[0],setLocale=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),country=_useState4[0],setCountry=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),dateTime=_useState6[0],setDateTime=_useState6[1];var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),limit=_useState8[0],setLimit=_useState8[1];var _useState9=useState({}),_useState10=_slicedToArray(_useState9,2),offset=_useState10[0],setOffset=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),selectedLocale=_useState12[0],setSelectedLocale=_useState12[1];var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),selectedCountry=_useState14[0],setSelectedCountry=_useState14[1];var _useState15=useState(null),_useState16=_slicedToArray(_useState15,2),selectedDateTime=_useState16[0],setSelectedDateTime=_useState16[1];var _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),selectedLimit=_useState18[0],setSelectedLimit=_useState18[1];var _useState19=useState(\"\"),_useState20=_slicedToArray(_useState19,2),selectedOffset=_useState20[0],setSelectedOffset=_useState20[1];var _useFilter=useFilter(),updateFilter=_useFilter.updateFilter;useEffect(function(){getFilters().then(function(filters){filters.forEach(function(filter){if(filter.id===\"locale\"){setLocale(filter);}else if(filter.id===\"country\"){setCountry(filter);}else if(filter.id===\"timestamp\"){setDateTime(filter);}else if(filter.id===\"limit\"){setLimit(filter);}else if(filter.id===\"offset\"){setOffset(filter);}});});},[]);function handleLimit(event){var _limit$validation;var value=Number(event.target.value);if(!value){setSelectedLimit(\"\");}if(limit.validation&&(value<Number(limit.validation.min)||value>Number((_limit$validation=limit.validation)===null||_limit$validation===void 0?void 0:_limit$validation.max))){return;}setSelectedLimit(value.toString());}function handlePlaylistFilter(event){event.preventDefault();updateFilter({locale:selectedLocale,country:selectedCountry,timestamp:selectedDateTime,limit:selectedLimit,offset:selectedOffset});}return/*#__PURE__*/React.createElement(Form,{onSubmit:handlePlaylistFilter},/*#__PURE__*/React.createElement(FormItem,null,/*#__PURE__*/React.createElement(Select,{classNamePrefix:\"react-select\",placeholder:locale.name,options:locale.values,onChange:function onChange(e){var _ref;return setSelectedLocale((_ref=e)===null||_ref===void 0?void 0:_ref.name);}})),/*#__PURE__*/React.createElement(FormItem,null,/*#__PURE__*/React.createElement(Select,{classNamePrefix:\"react-select\",placeholder:country.name,options:country.values,onChange:function onChange(e){var _ref2;return setSelectedCountry((_ref2=e)===null||_ref2===void 0?void 0:_ref2.name);}})),/*#__PURE__*/React.createElement(FormItem,null,/*#__PURE__*/React.createElement(ReactDatePicker,{showTimeInput:true,name:dateTime.id,placeholderText:dateTime.name,selected:selectedDateTime,dateFormat:\"yyyy/MM/dd HH:mm\",timeFormat:\"HH:mm\",onChange:function onChange(date){return setSelectedDateTime(date);}})),/*#__PURE__*/React.createElement(FormItem,null,/*#__PURE__*/React.createElement(\"input\",{name:limit.id,placeholder:limit.name,value:selectedLimit,onChange:handleLimit,type:\"number\"})),/*#__PURE__*/React.createElement(FormItem,null,/*#__PURE__*/React.createElement(\"input\",{name:offset.id,placeholder:offset.name,value:selectedOffset,onChange:function onChange(e){return setSelectedOffset(e.target.value);},type:\"number\"})),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Filtrar\"));};export default PlaylistFilter;","map":{"version":3,"sources":["/home/gimenezes/projects/ifood-frontend-test/src/Pages/PlaylistsHome/PlaylistFilters/index.tsx"],"names":["React","useState","useEffect","Select","ReactDatePicker","useFilter","getFilters","Form","FormItem","PlaylistFilter","locale","setLocale","country","setCountry","dateTime","setDateTime","limit","setLimit","offset","setOffset","selectedLocale","setSelectedLocale","selectedCountry","setSelectedCountry","selectedDateTime","setSelectedDateTime","selectedLimit","setSelectedLimit","selectedOffset","setSelectedOffset","updateFilter","then","filters","forEach","filter","id","handleLimit","event","value","Number","target","validation","min","max","toString","handlePlaylistFilter","preventDefault","timestamp","name","values","e","date"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, ChangeEvent, FormEvent } from \"react\";\n\nimport Select from \"react-select\";\n// import DatePicker from 'react-datepicker';\nimport ReactDatePicker from 'react-datepicker'\n\nimport { useFilter } from '../../../Hooks/playlistsHook';\n\nimport {\n  IFilter,\n  IFilterItem,\n  getFilters,\n} from '../../../Services/filterService';\n\nimport { Form, FormItem } from \"./styles\";\n\nconst PlaylistFilter: React.FC = () => {\n  const [locale, setLocale] = useState<IFilter>({} as IFilter);\n  const [country, setCountry] = useState<IFilter>({} as IFilter);\n  const [dateTime, setDateTime] = useState<IFilter>({} as IFilter);\n  const [limit, setLimit] = useState<IFilter>({} as IFilter);\n  const [offset, setOffset] = useState<IFilter>({} as IFilter);\n\n  const [selectedLocale, setSelectedLocale] = useState(\"\");\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\n  const [selectedDateTime, setSelectedDateTime] = useState<Date | null>(null);\n  const [selectedLimit, setSelectedLimit] = useState(\"\");\n  const [selectedOffset, setSelectedOffset] = useState(\"\");\n\n  const { updateFilter } = useFilter();\n\n  useEffect(() => {\n    getFilters().then((filters) => {\n      filters.forEach((filter) => {\n        if (filter.id === \"locale\") {\n          setLocale(filter);\n        } else if (filter.id === \"country\") {\n          setCountry(filter);\n        } else if (filter.id === \"timestamp\") {\n          setDateTime(filter);\n        } else if (filter.id === \"limit\") {\n          setLimit(filter);\n        } else if (filter.id === \"offset\") {\n          setOffset(filter);\n        }\n      });\n    });\n  }, []);\n\n  function handleLimit(event: ChangeEvent<HTMLInputElement>) {\n    const value = Number(event.target.value);\n\n    if (!value) {\n      setSelectedLimit(\"\");\n    }\n\n    if (\n      limit.validation &&\n      (value < Number(limit.validation.min) ||\n        value > Number(limit.validation?.max))\n    ) {\n      return;\n    }\n\n    setSelectedLimit(value.toString());\n  }\n\n  function handlePlaylistFilter(event: FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    updateFilter({\n      locale: selectedLocale,\n      country: selectedCountry,\n      timestamp: selectedDateTime,\n      limit: selectedLimit,\n      offset: selectedOffset,\n    });\n  }\n\n  return (\n    <Form onSubmit={handlePlaylistFilter}>\n      <FormItem>\n        <Select\n          classNamePrefix=\"react-select\"\n          placeholder={locale.name}\n          options={locale.values}\n          onChange={(e) => setSelectedLocale((e as IFilterItem)?.name)}\n        />\n      </FormItem>\n      <FormItem>\n        <Select\n          classNamePrefix=\"react-select\"\n          placeholder={country.name}\n          options={country.values}\n          onChange={(e) => setSelectedCountry((e as IFilterItem)?.name)}\n        />\n      </FormItem>\n      <FormItem>\n        <ReactDatePicker\n          showTimeInput\n          name={dateTime.id}\n          placeholderText={dateTime.name}\n          selected={selectedDateTime}\n          dateFormat=\"yyyy/MM/dd HH:mm\"\n          timeFormat=\"HH:mm\"\n          onChange={(date) => setSelectedDateTime(date as Date)}\n        />\n      </FormItem>\n      <FormItem>\n        <input\n          name={limit.id}\n          placeholder={limit.name}\n          value={selectedLimit}\n          onChange={handleLimit}\n          type=\"number\"\n        />\n      </FormItem>\n      <FormItem>\n        <input\n          name={offset.id}\n          placeholder={offset.name}\n          value={selectedOffset}\n          onChange={(e) => setSelectedOffset(e.target.value)}\n          type=\"number\"\n        />\n      </FormItem>\n      <button type=\"submit\">Filtrar</button>\n    </Form>\n  );\n};\n\nexport default PlaylistFilter;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pedroneto/Documents/pessoal/spotifood/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pedroneto/Documents/pessoal/spotifood/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/pedroneto/Documents/pessoal/spotifood/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pedroneto/Documents/pessoal/spotifood/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pedroneto/Documents/pessoal/spotifood/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pedroneto/Documents/pessoal/spotifood/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pedroneto/Documents/pessoal/spotifood/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pedroneto/Documents/pessoal/spotifood/src/components/ListPlaylist.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport api from '../services/api';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as playlistsActions from '../actions/playlists';\nimport './ListPlaylist.css';\nimport Playlist from '../components/Playlist';\n\nvar ListPlaylist =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListPlaylist, _Component);\n\n  function ListPlaylist() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ListPlaylist);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ListPlaylist)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      limit: 5,\n      offset: 0,\n      loadingMore: false\n    };\n\n    _this.handleClick =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _this$state, limit, offset, loadingMore, response;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$state = _this.state, limit = _this$state.limit, offset = _this$state.offset, loadingMore = _this$state.loadingMore;\n\n                _this.setState({\n                  offset: offset + limit\n                });\n\n                console.log(_this.state);\n                _context.next = 5;\n                return api.get('browse/featured-playlists', {\n                  params: {\n                    limit: 5\n                  }\n                });\n\n              case 5:\n                response = _context.sent;\n                console.log(response.data); // this.props.listPlaylists(response.data.playlists.items);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(ListPlaylist, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var playlists = this.props.playlists;\n      var data = playlists[0];\n\n      if (data !== undefined) {\n        return React.createElement(React.Fragment, null, data.map(function (item) {\n          return React.createElement(Playlist, {\n            key: item.id,\n            playlist: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          });\n        }), React.createElement(\"div\", {\n          className: \"load-more-button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: function onClick() {\n            return _this2.handleClick();\n          },\n          style: {\n            backgroundColor: 'rgb(0, 225, 85)',\n            border: 0,\n            fontWeight: '500'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"Load More\")));\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return ListPlaylist;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    playlists: state.playlists\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(playlistsActions, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListPlaylist);","map":{"version":3,"sources":["/Users/pedroneto/Documents/pessoal/spotifood/src/components/ListPlaylist.js"],"names":["React","Component","Button","api","bindActionCreators","connect","playlistsActions","Playlist","ListPlaylist","state","limit","offset","loadingMore","handleClick","e","setState","console","log","get","params","response","data","playlists","props","undefined","map","item","id","backgroundColor","border","fontWeight","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,OAAOC,GAAP,MAAgB,iBAAhB;AAEA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,gBAAZ,MAAkC,sBAAlC;AAEA,OAAO,oBAAP;AAEA,OAAOC,QAAP,MAAqB,wBAArB;;IAEMC,Y;;;;;;;;;;;;;;;;;UACLC,K,GAAQ;AACPC,MAAAA,KAAK,EAAE,CADA;AAEPC,MAAAA,MAAM,EAAE,CAFD;AAGPC,MAAAA,WAAW,EAAE;AAHN,K;;UAMRC,W;;;;;+BAAc,iBAAMC,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,8BAC0B,MAAKL,KAD/B,EACLC,KADK,eACLA,KADK,EACEC,MADF,eACEA,MADF,EACUC,WADV,eACUA,WADV;;AAEb,sBAAKG,QAAL,CAAc;AACbJ,kBAAAA,MAAM,EAAEA,MAAM,GAAGD;AADJ,iBAAd;;AAIAM,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAKR,KAAjB;AANa;AAAA,uBAQUN,GAAG,CAACe,GAAJ,CAAQ,2BAAR,EAAqC;AAC3DC,kBAAAA,MAAM,EAAE;AACPT,oBAAAA,KAAK,EAAE;AADA;AADmD,iBAArC,CARV;;AAAA;AAQPU,gBAAAA,QARO;AAcbJ,gBAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACC,IAArB,EAda,CAgBb;;AAhBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BAmBL;AAAA;;AAAA,UACAC,SADA,GACc,KAAKC,KADnB,CACAD,SADA;AAER,UAAID,IAAI,GAAGC,SAAS,CAAC,CAAD,CAApB;;AAEA,UAAID,IAAI,KAAKG,SAAb,EAAwB;AACvB,eACC,0CACEH,IAAI,CAACI,GAAL,CAAS,UAAAC,IAAI;AAAA,iBACb,oBAAC,QAAD;AAAU,YAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,YAAA,QAAQ,EAAED,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADa;AAAA,SAAb,CADF,EAIC;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,oBAAC,MAAD;AACC,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACb,WAAL,EAAN;AAAA,WADV;AAEC,UAAA,KAAK,EAAE;AACNe,YAAAA,eAAe,EAAE,iBADX;AAENC,YAAAA,MAAM,EAAE,CAFF;AAGNC,YAAAA,UAAU,EAAE;AAHN,WAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,CAJD,CADD;AAmBA,OApBD,MAoBO;AACN,eAAO,IAAP;AACA;AACD;;;;EArDyB7B,S;;AAwD3B,IAAM8B,eAAe,GAAG,SAAlBA,eAAkB,CAAAtB,KAAK;AAAA,SAAK;AACjCa,IAAAA,SAAS,EAAEb,KAAK,CAACa;AADgB,GAAL;AAAA,CAA7B;;AAIA,IAAMU,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAClC7B,kBAAkB,CAACE,gBAAD,EAAmB2B,QAAnB,CADgB;AAAA,CAAnC;;AAGA,eAAe5B,OAAO,CACrB0B,eADqB,EAErBC,kBAFqB,CAAP,CAGbxB,YAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { Button } from 'react-bootstrap';\n\nimport api from '../services/api';\n\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as playlistsActions from '../actions/playlists';\n\nimport './ListPlaylist.css';\n\nimport Playlist from '../components/Playlist';\n\nclass ListPlaylist extends Component {\n\tstate = {\n\t\tlimit: 5,\n\t\toffset: 0,\n\t\tloadingMore: false\n\t};\n\n\thandleClick = async e => {\n\t\tconst { limit, offset, loadingMore } = this.state;\n\t\tthis.setState({\n\t\t\toffset: offset + limit\n\t\t});\n\n\t\tconsole.log(this.state);\n\n\t\tconst response = await api.get('browse/featured-playlists', {\n\t\t\tparams: {\n\t\t\t\tlimit: 5\n\t\t\t}\n\t\t});\n\n\t\tconsole.log(response.data);\n\n\t\t// this.props.listPlaylists(response.data.playlists.items);\n\t};\n\n\trender() {\n\t\tconst { playlists } = this.props;\n\t\tlet data = playlists[0];\n\n\t\tif (data !== undefined) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t{data.map(item => (\n\t\t\t\t\t\t<Playlist key={item.id} playlist={item} />\n\t\t\t\t\t))}\n\t\t\t\t\t<div className=\"load-more-button\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={() => this.handleClick()}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackgroundColor: 'rgb(0, 225, 85)',\n\t\t\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\t\t\tfontWeight: '500'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tLoad More\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tplaylists: state.playlists\n});\n\nconst mapDispatchToProps = dispatch =>\n\tbindActionCreators(playlistsActions, dispatch);\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(ListPlaylist);\n"]},"metadata":{},"sourceType":"module"}
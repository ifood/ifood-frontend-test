{"ast":null,"code":"var _jsxFileName = \"/home/gimenezes/projects/ifood-frontend-test/src/Pages/PlaylistsHome/index.tsx\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { FiSearch } from \"react-icons/fi\";\nimport { FaSpotify } from \"react-icons/fa\";\nimport { useFilter } from \"../../Hooks/playlistsHook\";\nimport { useAuth } from \"../../Hooks/auth\";\nimport { getFeaturePlaylists } from \"../../Services/spotifyService\";\nimport authenticate from \"../../Services/authenticateService\";\nimport { Container, Content, ContentLogin, Logo, SearchNameForm, Title, Button, ContainerLogin } from \"./styles\";\nimport PlaylistFilter from \"./PlaylistFilters\";\nimport PlaylistCards from \"./PlaylistCards\";\n\nconst PlaylistsHome = () => {\n  const [initialItems, setInitialItems] = useState([]);\n  const [items, setItems] = useState([]);\n  const searchName = useRef(\"\");\n  const {\n    token\n  } = useAuth();\n  const {\n    filter\n  } = useFilter();\n\n  function getFilteredPlaylistItems(playlists, name) {\n    let filteredItems = playlists;\n\n    if (name) {\n      const regex = new RegExp(`${name}.+$`, \"i\");\n      filteredItems = playlists.filter(item => {\n        return item.name.search(regex) !== -1;\n      });\n    }\n\n    setItems(filteredItems);\n  }\n\n  function handleSearchPlaylistByName(event) {\n    searchName.current = event.target.value;\n    getFilteredPlaylistItems(initialItems, searchName.current);\n  }\n\n  const getPlaylistsItems = useCallback(() => {\n    if (token) {\n      getFeaturePlaylists(token, filter).then(playlists => {\n        setInitialItems(playlists);\n        getFilteredPlaylistItems(playlists, searchName.current);\n      });\n    }\n  }, [token, filter]);\n  useEffect(() => {\n    getPlaylistsItems();\n    const timerID = setInterval(() => {\n      getPlaylistsItems();\n    }, 30000);\n    return () => clearInterval(timerID);\n  }, [getPlaylistsItems]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, !token && /*#__PURE__*/React.createElement(ContainerLogin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ContentLogin, {\n    hasToken: (token === null || token === void 0 ? void 0 : token.length) !== 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FaSpotify, {\n    size: 70,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Acesse para encontrar as melhores playlists\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: authenticate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FaSpotify, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }), \" Conectar com Spotify\"))), token && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SearchNameForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FiSearch, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleSearchPlaylistByName,\n    placeholder: \"Procure por nome da playlist...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(PlaylistFilter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }), items && /*#__PURE__*/React.createElement(PlaylistCards, {\n    items: items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 23\n    }\n  }))));\n};\n\nexport default PlaylistsHome;","map":{"version":3,"sources":["/home/gimenezes/projects/ifood-frontend-test/src/Pages/PlaylistsHome/index.tsx"],"names":["React","useCallback","useEffect","useRef","useState","FiSearch","FaSpotify","useFilter","useAuth","getFeaturePlaylists","authenticate","Container","Content","ContentLogin","Logo","SearchNameForm","Title","Button","ContainerLogin","PlaylistFilter","PlaylistCards","PlaylistsHome","initialItems","setInitialItems","items","setItems","searchName","token","filter","getFilteredPlaylistItems","playlists","name","filteredItems","regex","RegExp","item","search","handleSearchPlaylistByName","event","current","target","value","getPlaylistsItems","then","timerID","setInterval","clearInterval","length"],"mappings":"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","sourcesContent":["import React, {\n  ChangeEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\n\nimport { FiSearch } from \"react-icons/fi\";\nimport { FaSpotify } from \"react-icons/fa\";\n\nimport { useFilter } from \"../../Hooks/playlistsHook\";\nimport { useAuth } from \"../../Hooks/auth\";\nimport {\n  getFeaturePlaylists,\n  IPlaylistItem,\n} from \"../../Services/spotifyService\";\nimport authenticate from \"../../Services/authenticateService\";\n\nimport {\n  Container,\n  Content,\n  ContentLogin,\n  Logo,\n  SearchNameForm,\n  Title,\n  Button, ContainerLogin\n} from \"./styles\";\nimport PlaylistFilter from \"./PlaylistFilters\";\nimport PlaylistCards from \"./PlaylistCards\";\n\nconst PlaylistsHome: React.FC = () => {\n  const [initialItems, setInitialItems] = useState<IPlaylistItem[]>([]);\n  const [items, setItems] = useState<IPlaylistItem[]>([]);\n\n  const searchName = useRef(\"\");\n\n  const { token } = useAuth();\n  const { filter } = useFilter();\n\n  function getFilteredPlaylistItems(playlists: IPlaylistItem[], name: string) {\n    let filteredItems = playlists;\n\n    if (name) {\n      const regex = new RegExp(`${name}.+$`, \"i\");\n\n      filteredItems = playlists.filter((item) => {\n        return item.name.search(regex) !== -1;\n      });\n    }\n\n    setItems(filteredItems);\n  }\n\n  function handleSearchPlaylistByName(event: ChangeEvent<HTMLInputElement>) {\n    searchName.current = event.target.value;\n\n    getFilteredPlaylistItems(initialItems, searchName.current);\n  }\n\n  const getPlaylistsItems = useCallback(() => {\n    if (token) {\n      getFeaturePlaylists(token, filter).then((playlists) => {\n        setInitialItems(playlists);\n        getFilteredPlaylistItems(playlists, searchName.current);\n      });\n    }\n  }, [token, filter]);\n\n  useEffect(() => {\n    getPlaylistsItems();\n\n    const timerID = setInterval(() => {\n      getPlaylistsItems();\n    }, 30000);\n\n    return () => clearInterval(timerID);\n  }, [getPlaylistsItems]);\n\n  return (\n    <Container>\n      <Content>\n        {!token && (\n          <ContainerLogin>\n            <ContentLogin hasToken={token?.length !== 0}>\n              <Logo>\n                <FaSpotify size={70} />\n              </Logo>\n              <Title>Acesse para encontrar as melhores playlists</Title>\n              <Button onClick={authenticate}>\n                <FaSpotify size={20} /> Conectar com Spotify\n              </Button>\n            </ContentLogin>\n          </ContainerLogin>\n        )}\n\n        {token && (\n          <>\n            <SearchNameForm>\n              <FiSearch size={20} />\n              <input\n                onChange={handleSearchPlaylistByName}\n                placeholder=\"Procure por nome da playlist...\"\n              />\n            </SearchNameForm>\n\n            <PlaylistFilter />\n            {items && <PlaylistCards items={items} />}\n          </>\n        )}\n      </Content>\n    </Container>\n  );\n};\n\nexport default PlaylistsHome;\n"]},"metadata":{},"sourceType":"module"}
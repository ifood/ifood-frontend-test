{"ast":null,"code":"import _slicedToArray from\"/home/gimenezes/projects/ifood-frontend-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{createContext,useContext,useEffect,useState}from'react';import{useLocation}from'react-router-dom';import getToken from'../Utils/getToken';import authenticate from'../Services/authenticateService';var AuthContext=createContext({});var AuthProvider=function AuthProvider(_ref){var children=_ref.children;var _useState=useState(function(){var storedToken=localStorage.getItem('@Spotifood:token');if(storedToken){return storedToken;}return null;}),_useState2=_slicedToArray(_useState,2),token=_useState2[0],setToken=_useState2[1];var location=useLocation();useEffect(function(){if(!token){var _getToken=getToken(location.hash),accessToken=_getToken.accessToken,expiresIn=_getToken.expiresIn;if(accessToken){var expiresAt=new Date();expiresAt.setSeconds(expiresAt.getSeconds()+expiresIn);localStorage.setItem('@Spotifood:token',accessToken);localStorage.setItem('@Spotifood:expiresAt',expiresAt.toString());setToken(accessToken);}}else{var currentDate=new Date();var _expiresAt=localStorage.getItem('@Spotifood:expiresAt');if(_expiresAt&&currentDate.getTime()>Date.parse(_expiresAt.toString())){localStorage.removeItem('@Spotifood:token');localStorage.removeItem('@Spotifood:expiresAt');authenticate();}}if(window.location.hash!==''){window.location.hash='';}},[token,location]);return/*#__PURE__*/React.createElement(AuthContext.Provider,{value:{token:token}},children);};function useAuth(){var context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;}export{AuthProvider,useAuth};","map":{"version":3,"sources":["/home/gimenezes/projects/ifood-frontend-test/src/Hooks/auth.tsx"],"names":["React","createContext","useContext","useEffect","useState","useLocation","getToken","authenticate","AuthContext","AuthProvider","children","storedToken","localStorage","getItem","token","setToken","location","hash","accessToken","expiresIn","expiresAt","Date","setSeconds","getSeconds","setItem","toString","currentDate","getTime","parse","removeItem","window","useAuth","context","Error"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,UAA/B,CAA2CC,SAA3C,CAAsDC,QAAtD,KAAsE,OAAtE,CACA,OAASC,WAAT,KAA4B,kBAA5B,CAEA,MAAOC,CAAAA,QAAP,KAAqB,mBAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,iCAAzB,CAUA,GAAMC,CAAAA,WAAW,CAAGP,aAAa,CAAkB,EAAlB,CAAjC,CAEA,GAAMQ,CAAAA,YAAyC,CAAG,QAA5CA,CAAAA,YAA4C,MAEzB,IADvBC,CAAAA,QACuB,MADvBA,QACuB,eACGN,QAAQ,CAAC,UAAM,CACvC,GAAMO,CAAAA,WAAW,CAAGC,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAApB,CAEA,GAAIF,WAAJ,CAAiB,CACf,MAAOA,CAAAA,WAAP,CACD,CAED,MAAO,KAAP,CACD,CARiC,CADX,wCAChBG,KADgB,eACTC,QADS,eAWvB,GAAMC,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CAEAF,SAAS,CAAC,UAAM,CACd,GAAI,CAACW,KAAL,CAAY,eACyBR,QAAQ,CACzCU,QAAQ,CAACC,IADgC,CADjC,CACFC,WADE,WACFA,WADE,CACWC,SADX,WACWA,SADX,CAKV,GAAID,WAAJ,CAAiB,CACf,GAAME,CAAAA,SAAS,CAAG,GAAIC,CAAAA,IAAJ,EAAlB,CACAD,SAAS,CAACE,UAAV,CAAqBF,SAAS,CAACG,UAAV,GAAyBJ,SAA9C,EAEAP,YAAY,CAACY,OAAb,CAAqB,kBAArB,CAAyCN,WAAzC,EACAN,YAAY,CAACY,OAAb,CAAqB,sBAArB,CAA6CJ,SAAS,CAACK,QAAV,EAA7C,EAEAV,QAAQ,CAACG,WAAD,CAAR,CACD,CACF,CAdD,IAcO,CACL,GAAMQ,CAAAA,WAAW,CAAG,GAAIL,CAAAA,IAAJ,EAApB,CACA,GAAMD,CAAAA,UAAS,CAAGR,YAAY,CAACC,OAAb,CAAqB,sBAArB,CAAlB,CAEA,GACEO,UAAS,EACTM,WAAW,CAACC,OAAZ,GAAwBN,IAAI,CAACO,KAAL,CAAWR,UAAS,CAACK,QAAV,EAAX,CAF1B,CAGE,CACAb,YAAY,CAACiB,UAAb,CAAwB,kBAAxB,EACAjB,YAAY,CAACiB,UAAb,CAAwB,sBAAxB,EAEAtB,YAAY,GACb,CACF,CAED,GAAIuB,MAAM,CAACd,QAAP,CAAgBC,IAAhB,GAAyB,EAA7B,CAAiC,CAC/Ba,MAAM,CAACd,QAAP,CAAgBC,IAAhB,CAAuB,EAAvB,CACD,CACF,CAjCQ,CAiCN,CAACH,KAAD,CAAQE,QAAR,CAjCM,CAAT,CAmCA,mBACE,oBAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CAAEF,KAAK,CAALA,KAAF,CAA7B,EAAyCJ,QAAzC,CADF,CAGD,CArDD,CAuDA,QAASqB,CAAAA,OAAT,EAAoC,CAClC,GAAMC,CAAAA,OAAO,CAAG9B,UAAU,CAACM,WAAD,CAA1B,CAEA,GAAI,CAACwB,OAAL,CAAc,CACZ,KAAM,IAAIC,CAAAA,KAAJ,CAAU,6CAAV,CAAN,CACD,CAED,MAAOD,CAAAA,OAAP,CACD,CAED,OAASvB,YAAT,CAAuBsB,OAAvB","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport getToken from '../Utils/getToken';\nimport authenticate from '../Services/authenticateService';\n\ninterface AuthContextData {\n  token?: string | null;\n}\n\ninterface AuthProviderProps {\n  children: React.ReactNode;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nconst AuthProvider: React.FC<AuthProviderProps> = ({\n  children,\n}: AuthProviderProps) => {\n  const [token, setToken] = useState(() => {\n    const storedToken = localStorage.getItem('@Spotifood:token');\n\n    if (storedToken) {\n      return storedToken;\n    }\n\n    return null;\n  });\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!token) {\n      const { accessToken, expiresIn } = getToken(\n        location.hash,\n      );\n\n      if (accessToken) {\n        const expiresAt = new Date();\n        expiresAt.setSeconds(expiresAt.getSeconds() + expiresIn);\n\n        localStorage.setItem('@Spotifood:token', accessToken);\n        localStorage.setItem('@Spotifood:expiresAt', expiresAt.toString());\n\n        setToken(accessToken);\n      }\n    } else {\n      const currentDate = new Date();\n      const expiresAt = localStorage.getItem('@Spotifood:expiresAt');\n\n      if (\n        expiresAt &&\n        currentDate.getTime() > Date.parse(expiresAt.toString())\n      ) {\n        localStorage.removeItem('@Spotifood:token');\n        localStorage.removeItem('@Spotifood:expiresAt');\n\n        authenticate();\n      }\n    }\n\n    if (window.location.hash !== '') {\n      window.location.hash = '';\n    }\n  }, [token, location]);\n\n  return (\n    <AuthContext.Provider value={{ token }}>{children}</AuthContext.Provider>\n  );\n};\n\nfunction useAuth(): AuthContextData {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n\n  return context;\n}\n\nexport { AuthProvider, useAuth };\n"]},"metadata":{},"sourceType":"module"}
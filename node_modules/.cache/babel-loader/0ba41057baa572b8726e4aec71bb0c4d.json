{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/gimenezes/projects/ifood-frontend-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject3(){var data=_taggedTemplateLiteral([\"\\nmargin: 0 7px;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\ncolor: \",\"\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\ndisplay: flex;\\nalign-items:center;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import styled from'styled-components';import Switch from'react-switch';export var Container=styled.div(_templateObject());export var ToggleLabel=styled.span(_templateObject2(),function(props){return props.theme.colors.white;});export var ThemeSelector=styled(Switch).attrs(function(_ref){var theme=_ref.theme;return{onColor:theme.colors.on,offColor:theme.colors.off};})(_templateObject3());","map":{"version":3,"sources":["/home/gimenezes/projects/ifood-frontend-test/src/Components/MainHeader/ButtonTheme/styles.ts"],"names":["styled","Switch","Container","div","ToggleLabel","span","props","theme","colors","white","ThemeSelector","attrs","onColor","on","offColor","off"],"mappings":"mpBAAA,MAAOA,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAyC,cAAzC,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAGF,MAAM,CAACG,GAAV,mBAAf,CAKP,MAAO,IAAMC,CAAAA,WAAW,CAAGJ,MAAM,CAACK,IAAV,oBACf,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,KAAvB,EADU,CAAjB,CAGP,MAAO,IAAMC,CAAAA,aAAa,CAAGV,MAAM,CAACC,MAAD,CAAN,CAAeU,KAAf,CACzB,kBAAGJ,CAAAA,KAAH,MAAGA,KAAH,OAAgB,CACZK,OAAO,CAAEL,KAAK,CAACC,MAAN,CAAaK,EADV,CAEZC,QAAQ,CAAEP,KAAK,CAACC,MAAN,CAAaO,GAFX,CAAhB,EADyB,CAAH,oBAAnB","sourcesContent":["import styled from 'styled-components';\nimport Switch, { ReactSwitchProps } from 'react-switch';\n\nexport const Container = styled.div`\ndisplay: flex;\nalign-items:center;\n`;\n\nexport const ToggleLabel = styled.span`\ncolor: ${props => props.theme.colors.white}`;\n\nexport const ThemeSelector = styled(Switch).attrs<ReactSwitchProps>(\n    ({ theme }) => ({\n        onColor: theme.colors.on,\n        offColor: theme.colors.off,\n    })\n) <ReactSwitchProps> `\nmargin: 0 7px;\n`;"]},"metadata":{},"sourceType":"module"}
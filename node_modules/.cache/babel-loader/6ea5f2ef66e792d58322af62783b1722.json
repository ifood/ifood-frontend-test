{"ast":null,"code":"var _jsxFileName = \"/home/gimenezes/projects/ifood-frontend-test/src/Pages/PlaylistsHome/PlaylistFilters/index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\"; // import DatePicker from 'react-datepicker';\n\nimport ReactDatePicker from 'react-datepicker';\nimport { useFilter } from '../../../Hooks/playlistsHook';\nimport { getFilters } from '../../../Services/filterService';\nimport { Form, FormItem } from \"./styles\";\n\nconst PlaylistFilter = () => {\n  const [locale, setLocale] = useState({});\n  const [country, setCountry] = useState({});\n  const [dateTime, setDateTime] = useState({});\n  const [limit, setLimit] = useState({});\n  const [offset, setOffset] = useState({});\n  const [selectedLocale, setSelectedLocale] = useState(\"\");\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\n  const [selectedDateTime, setSelectedDateTime] = useState(null);\n  const [selectedLimit, setSelectedLimit] = useState(\"\");\n  const [selectedOffset, setSelectedOffset] = useState(\"\");\n  const {\n    updateFilter\n  } = useFilter();\n  useEffect(() => {\n    getFilters().then(filters => {\n      filters.forEach(filter => {\n        if (filter.id === \"locale\") {\n          setLocale(filter);\n        } else if (filter.id === \"country\") {\n          setCountry(filter);\n        } else if (filter.id === \"timestamp\") {\n          setDateTime(filter);\n        } else if (filter.id === \"limit\") {\n          setLimit(filter);\n        } else if (filter.id === \"offset\") {\n          setOffset(filter);\n        }\n      });\n    });\n  }, []);\n\n  function handleLimit(event) {\n    var _limit$validation;\n\n    const value = Number(event.target.value);\n\n    if (!value) {\n      setSelectedLimit(\"\");\n    }\n\n    if (limit.validation && (value < Number(limit.validation.min) || value > Number((_limit$validation = limit.validation) === null || _limit$validation === void 0 ? void 0 : _limit$validation.max))) {\n      return;\n    }\n\n    setSelectedLimit(value.toString());\n  }\n\n  function handlePlaylistFilter(event) {\n    event.preventDefault();\n    updateFilter({\n      locale: selectedLocale,\n      country: selectedCountry,\n      timestamp: selectedDateTime,\n      limit: selectedLimit,\n      offset: selectedOffset\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handlePlaylistFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    classNamePrefix: \"react-select\",\n    placeholder: locale.name,\n    options: locale.values,\n    onChange: e => {\n      var _ref;\n\n      return setSelectedLocale((_ref = e) === null || _ref === void 0 ? void 0 : _ref.name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    classNamePrefix: \"react-select\",\n    placeholder: country.name,\n    options: country.values,\n    onChange: e => {\n      var _ref2;\n\n      return setSelectedCountry((_ref2 = e) === null || _ref2 === void 0 ? void 0 : _ref2.name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ReactDatePicker, {\n    showTimeInput: true,\n    name: dateTime.id,\n    placeholderText: dateTime.name,\n    selected: selectedDateTime,\n    dateFormat: \"yyyy/MM/dd HH:mm\",\n    timeFormat: \"HH:mm\",\n    onChange: date => setSelectedDateTime(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: limit.id,\n    placeholder: limit.name,\n    value: selectedLimit,\n    onChange: handleLimit,\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: offset.id,\n    placeholder: offset.name,\n    value: selectedOffset,\n    onChange: e => setSelectedOffset(e.target.value),\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, \"Filtrar\"));\n};\n\nexport default PlaylistFilter;","map":{"version":3,"sources":["/home/gimenezes/projects/ifood-frontend-test/src/Pages/PlaylistsHome/PlaylistFilters/index.tsx"],"names":["React","useState","useEffect","Select","ReactDatePicker","useFilter","getFilters","Form","FormItem","PlaylistFilter","locale","setLocale","country","setCountry","dateTime","setDateTime","limit","setLimit","offset","setOffset","selectedLocale","setSelectedLocale","selectedCountry","setSelectedCountry","selectedDateTime","setSelectedDateTime","selectedLimit","setSelectedLimit","selectedOffset","setSelectedOffset","updateFilter","then","filters","forEach","filter","id","handleLimit","event","value","Number","target","validation","min","max","toString","handlePlaylistFilter","preventDefault","timestamp","name","values","e","date"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, ChangeEvent, FormEvent } from \"react\";\n\nimport Select from \"react-select\";\n// import DatePicker from 'react-datepicker';\nimport ReactDatePicker from 'react-datepicker'\n\nimport { useFilter } from '../../../Hooks/playlistsHook';\n\nimport {\n  IFilter,\n  IFilterItem,\n  getFilters,\n} from '../../../Services/filterService';\n\nimport { Form, FormItem } from \"./styles\";\n\nconst PlaylistFilter: React.FC = () => {\n  const [locale, setLocale] = useState<IFilter>({} as IFilter);\n  const [country, setCountry] = useState<IFilter>({} as IFilter);\n  const [dateTime, setDateTime] = useState<IFilter>({} as IFilter);\n  const [limit, setLimit] = useState<IFilter>({} as IFilter);\n  const [offset, setOffset] = useState<IFilter>({} as IFilter);\n\n  const [selectedLocale, setSelectedLocale] = useState(\"\");\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\n  const [selectedDateTime, setSelectedDateTime] = useState<Date | null>(null);\n  const [selectedLimit, setSelectedLimit] = useState(\"\");\n  const [selectedOffset, setSelectedOffset] = useState(\"\");\n\n  const { updateFilter } = useFilter();\n\n  useEffect(() => {\n    getFilters().then((filters) => {\n      filters.forEach((filter) => {\n        if (filter.id === \"locale\") {\n          setLocale(filter);\n        } else if (filter.id === \"country\") {\n          setCountry(filter);\n        } else if (filter.id === \"timestamp\") {\n          setDateTime(filter);\n        } else if (filter.id === \"limit\") {\n          setLimit(filter);\n        } else if (filter.id === \"offset\") {\n          setOffset(filter);\n        }\n      });\n    });\n  }, []);\n\n  function handleLimit(event: ChangeEvent<HTMLInputElement>) {\n    const value = Number(event.target.value);\n\n    if (!value) {\n      setSelectedLimit(\"\");\n    }\n\n    if (\n      limit.validation &&\n      (value < Number(limit.validation.min) ||\n        value > Number(limit.validation?.max))\n    ) {\n      return;\n    }\n\n    setSelectedLimit(value.toString());\n  }\n\n  function handlePlaylistFilter(event: FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    updateFilter({\n      locale: selectedLocale,\n      country: selectedCountry,\n      timestamp: selectedDateTime,\n      limit: selectedLimit,\n      offset: selectedOffset,\n    });\n  }\n\n  return (\n    <Form onSubmit={handlePlaylistFilter}>\n      <FormItem>\n        <Select\n          classNamePrefix=\"react-select\"\n          placeholder={locale.name}\n          options={locale.values}\n          onChange={(e) => setSelectedLocale((e as IFilterItem)?.name)}\n        />\n      </FormItem>\n      <FormItem>\n        <Select\n          classNamePrefix=\"react-select\"\n          placeholder={country.name}\n          options={country.values}\n          onChange={(e) => setSelectedCountry((e as IFilterItem)?.name)}\n        />\n      </FormItem>\n      <FormItem>\n        <ReactDatePicker\n          showTimeInput\n          name={dateTime.id}\n          placeholderText={dateTime.name}\n          selected={selectedDateTime}\n          dateFormat=\"yyyy/MM/dd HH:mm\"\n          timeFormat=\"HH:mm\"\n          onChange={(date) => setSelectedDateTime(date as Date)}\n        />\n      </FormItem>\n      <FormItem>\n        <input\n          name={limit.id}\n          placeholder={limit.name}\n          value={selectedLimit}\n          onChange={handleLimit}\n          type=\"number\"\n        />\n      </FormItem>\n      <FormItem>\n        <input\n          name={offset.id}\n          placeholder={offset.name}\n          value={selectedOffset}\n          onChange={(e) => setSelectedOffset(e.target.value)}\n          type=\"number\"\n        />\n      </FormItem>\n      <button type=\"submit\">Filtrar</button>\n    </Form>\n  );\n};\n\nexport default PlaylistFilter;\n"]},"metadata":{},"sourceType":"module"}
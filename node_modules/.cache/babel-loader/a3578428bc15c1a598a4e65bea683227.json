{"ast":null,"code":"import _slicedToArray from\"/home/gimenezes/projects/ifood-frontend-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useEffect,useRef,useState}from\"react\";import{FiSearch}from\"react-icons/fi\";import{FaSpotify}from\"react-icons/fa\";import{useFilter}from\"../../Hooks/playlistsHook\";import{useAuth}from\"../../Hooks/auth\";import{getFeaturePlaylists}from\"../../Services/spotifyService\";import authenticate from\"../../Services/authenticateService\";import LayoutPage from\"../../Components/LayoutPage\";import{Container,Content,ContentLogin,Logo,SearchNameForm,Title,Button,ContainerLogin}from\"./styles\";import PlaylistFilter from\"./PlaylistFilters\";import PlaylistCards from\"./PlaylistCards\";var PlaylistsHome=function PlaylistsHome(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),initialItems=_useState2[0],setInitialItems=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),items=_useState4[0],setItems=_useState4[1];var searchName=useRef(\"\");var _useAuth=useAuth(),token=_useAuth.token;var _useFilter=useFilter(),filter=_useFilter.filter;function getFilteredPlaylistItems(playlists,name){var filteredItems=playlists;if(name){var regex=new RegExp(\"\".concat(name,\".+$\"),\"i\");filteredItems=playlists.filter(function(item){return item.name.search(regex)!==-1;});}setItems(filteredItems);}function handleSearchPlaylistByName(event){searchName.current=event.target.value;getFilteredPlaylistItems(initialItems,searchName.current);}var getPlaylistsItems=useCallback(function(){if(token){getFeaturePlaylists(token,filter).then(function(playlists){setInitialItems(playlists);getFilteredPlaylistItems(playlists,searchName.current);});}},[token,filter]);useEffect(function(){getPlaylistsItems();var timerID=setInterval(function(){getPlaylistsItems();},30000);return function(){return clearInterval(timerID);};},[getPlaylistsItems]);return/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Content,null,!token&&/*#__PURE__*/React.createElement(ContainerLogin,null,/*#__PURE__*/React.createElement(ContentLogin,{hasToken:(token===null||token===void 0?void 0:token.length)!==0},/*#__PURE__*/React.createElement(Logo,null,/*#__PURE__*/React.createElement(FaSpotify,{size:70})),/*#__PURE__*/React.createElement(Title,null,\"Acesse para encontrar as melhores playlists\"),/*#__PURE__*/React.createElement(Button,{onClick:authenticate},/*#__PURE__*/React.createElement(FaSpotify,{size:20}),\" Conectar com Spotify\"))),token&&/*#__PURE__*/React.createElement(LayoutPage,null,/*#__PURE__*/React.createElement(SearchNameForm,null,/*#__PURE__*/React.createElement(FiSearch,{size:20}),/*#__PURE__*/React.createElement(\"input\",{onChange:handleSearchPlaylistByName,placeholder:\"Pesquisar por nome...\"})),/*#__PURE__*/React.createElement(PlaylistFilter,null),items&&/*#__PURE__*/React.createElement(PlaylistCards,{items:items}))));};export default PlaylistsHome;","map":{"version":3,"sources":["/home/gimenezes/projects/ifood-frontend-test/src/Pages/PlaylistsHome/index.tsx"],"names":["React","useCallback","useEffect","useRef","useState","FiSearch","FaSpotify","useFilter","useAuth","getFeaturePlaylists","authenticate","LayoutPage","Container","Content","ContentLogin","Logo","SearchNameForm","Title","Button","ContainerLogin","PlaylistFilter","PlaylistCards","PlaylistsHome","initialItems","setInitialItems","items","setItems","searchName","token","filter","getFilteredPlaylistItems","playlists","name","filteredItems","regex","RegExp","item","search","handleSearchPlaylistByName","event","current","target","value","getPlaylistsItems","then","timerID","setInterval","clearInterval","length"],"mappings":"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","sourcesContent":["import React, {\n  ChangeEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\n\nimport { FiSearch } from \"react-icons/fi\";\nimport { FaSpotify } from \"react-icons/fa\";\n\nimport { useFilter } from \"../../Hooks/playlistsHook\";\nimport { useAuth } from \"../../Hooks/auth\";\nimport {\n  getFeaturePlaylists,\n  IPlaylistItem,\n} from \"../../Services/spotifyService\";\nimport authenticate from \"../../Services/authenticateService\";\n\nimport LayoutPage from \"../../Components/LayoutPage\";\nimport {\n  Container,\n  Content,\n  ContentLogin,\n  Logo,\n  SearchNameForm,\n  Title,\n  Button, ContainerLogin\n} from \"./styles\";\nimport PlaylistFilter from \"./PlaylistFilters\";\nimport PlaylistCards from \"./PlaylistCards\";\n\nconst PlaylistsHome: React.FC = () => {\n  const [initialItems, setInitialItems] = useState<IPlaylistItem[]>([]);\n  const [items, setItems] = useState<IPlaylistItem[]>([]);\n\n  const searchName = useRef(\"\");\n\n  const { token } = useAuth();\n  const { filter } = useFilter();\n\n  function getFilteredPlaylistItems(playlists: IPlaylistItem[], name: string) {\n    let filteredItems = playlists;\n\n    if (name) {\n      const regex = new RegExp(`${name}.+$`, \"i\");\n\n      filteredItems = playlists.filter((item) => {\n        return item.name.search(regex) !== -1;\n      });\n    }\n\n    setItems(filteredItems);\n  }\n\n  function handleSearchPlaylistByName(event: ChangeEvent<HTMLInputElement>) {\n    searchName.current = event.target.value;\n\n    getFilteredPlaylistItems(initialItems, searchName.current);\n  }\n\n  const getPlaylistsItems = useCallback(() => {\n    if (token) {\n      getFeaturePlaylists(token, filter).then((playlists) => {\n        setInitialItems(playlists);\n        getFilteredPlaylistItems(playlists, searchName.current);\n      });\n    }\n  }, [token, filter]);\n\n  useEffect(() => {\n    getPlaylistsItems();\n\n    const timerID = setInterval(() => {\n      getPlaylistsItems();\n    }, 30000);\n\n    return () => clearInterval(timerID);\n  }, [getPlaylistsItems]);\n\n  return (\n    <Container>\n      <Content>\n        {!token && (\n          <ContainerLogin>\n            <ContentLogin hasToken={token?.length !== 0}>\n              <Logo>\n                <FaSpotify size={70} />\n              </Logo>\n              <Title>Acesse para encontrar as melhores playlists</Title>\n              <Button onClick={authenticate}>\n                <FaSpotify size={20} /> Conectar com Spotify\n              </Button>\n            </ContentLogin>\n          </ContainerLogin>\n        )}\n\n        {token && (\n          <LayoutPage>\n            <SearchNameForm>\n              <FiSearch size={20} />\n              <input\n                onChange={handleSearchPlaylistByName}\n                placeholder=\"Pesquisar por nome...\"\n              />\n            </SearchNameForm>\n\n            <PlaylistFilter />\n            {items && <PlaylistCards items={items} />}\n          </LayoutPage>\n        )}\n      </Content>\n    </Container>\n  );\n};\n\nexport default PlaylistsHome;\n"]},"metadata":{},"sourceType":"module"}
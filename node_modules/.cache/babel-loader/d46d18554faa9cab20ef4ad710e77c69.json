{"ast":null,"code":"import axios from 'axios';\nexport const getFilters = async () => {\n  const response = await axios.get('http://www.mocky.io/v2/5a25fade2e0000213aa90776');\n  const {\n    filters\n  } = response.data;\n  return filters.map(filter => {\n    let valueItems = null;\n\n    if (filter.values) {\n      valueItems = filter.values.map(value => {\n        return {\n          name: value.value,\n          label: value.name\n        };\n      });\n    }\n\n    return {\n      id: filter.id,\n      name: filter.name,\n      values: valueItems,\n      validation: filter.validation\n    };\n  });\n};","map":{"version":3,"sources":["/home/gimenezes/projects/ifood-frontend-test/src/Services/filterService.ts"],"names":["axios","getFilters","response","get","filters","data","map","filter","valueItems","values","value","name","label","id","validation"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAsCA,OAAO,MAAMC,UAAU,GAAG,YAAgC;AACxD,QAAMC,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CACrB,iDADqB,CAAvB;AAIA,QAAM;AAAEC,IAAAA;AAAF,MAAcF,QAAQ,CAACG,IAA7B;AAEA,SAAOD,OAAO,CAACE,GAAR,CAAaC,MAAD,IAA6B;AAC9C,QAAIC,UAAU,GAAG,IAAjB;;AAEA,QAAID,MAAM,CAACE,MAAX,EAAmB;AACjBD,MAAAA,UAAU,GAAGD,MAAM,CAACE,MAAP,CAAcH,GAAd,CAAkBI,KAAK,IAAI;AACtC,eAAO;AACLC,UAAAA,IAAI,EAAED,KAAK,CAACA,KADP;AAELE,UAAAA,KAAK,EAAEF,KAAK,CAACC;AAFR,SAAP;AAID,OALY,CAAb;AAMD;;AAED,WAAO;AACLE,MAAAA,EAAE,EAAEN,MAAM,CAACM,EADN;AAELF,MAAAA,IAAI,EAAEJ,MAAM,CAACI,IAFR;AAGLF,MAAAA,MAAM,EAAED,UAHH;AAILM,MAAAA,UAAU,EAAEP,MAAM,CAACO;AAJd,KAAP;AAMD,GAlBM,CAAP;AAmBD,CA1BM","sourcesContent":["import axios from 'axios';\n\nexport interface IFilter {\n  id: string;\n  name: string;\n  values?: IFilterItem[];\n  validation?: {\n    primitiveType: string;\n    entityType?: string;\n    pattern?: string;\n    min?: number;\n    max?: number;\n  };\n}\n\nexport interface IFilterItem {\n  name: string;\n  label: string;\n}\n\ninterface IFilterResponse {\n  id: string;\n  name: string;\n  values?: IFilterResponseItem[];\n  validation?: {\n    primitiveType: string;\n    entityType?: string;\n    pattern?: string;\n    min?: number;\n    max?: number;\n  };\n}\n\ninterface IFilterResponseItem {\n  name: string;\n  value: string;\n}\n\nexport const getFilters = async (): Promise<IFilter[]> => {\n  const response = await axios.get(\n    'http://www.mocky.io/v2/5a25fade2e0000213aa90776',\n  );\n\n  const { filters } = response.data;\n\n  return filters.map((filter: IFilterResponse) => {\n    let valueItems = null;\n\n    if (filter.values) {\n      valueItems = filter.values.map(value => {\n        return {\n          name: value.value,\n          label: value.name,\n        };\n      });\n    }\n\n    return {\n      id: filter.id,\n      name: filter.name,\n      values: valueItems,\n      validation: filter.validation,\n    } as IFilter;\n  });\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export default function getToken(hash) {\n  const pieces = hash.split('&');\n  const data = {};\n  pieces.forEach(piece => {\n    const parts = piece.split('=');\n\n    if (parts.length < 2) {\n      parts.push('');\n    }\n\n    const name = decodeURIComponent(parts[0]);\n    const value = decodeURIComponent(parts[1]);\n    data[name] = value;\n  });\n  return {\n    accessToken: data['#access_token'],\n    type: data.token_type,\n    expiresIn: Number(data.expires_in)\n  };\n}","map":{"version":3,"sources":["/home/gimenezes/projects/ifood-frontend-test/src/Utils/getToken.ts"],"names":["getToken","hash","pieces","split","data","forEach","piece","parts","length","push","name","decodeURIComponent","value","accessToken","type","token_type","expiresIn","Number","expires_in"],"mappings":"AAME,eAAe,SAASA,QAAT,CAAkBC,IAAlB,EAAwC;AACrD,QAAMC,MAAM,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAf;AACA,QAAMC,IAAI,GAAG,EAAb;AAEAF,EAAAA,MAAM,CAACG,OAAP,CAAeC,KAAK,IAAI;AACtB,UAAMC,KAAK,GAAGD,KAAK,CAACH,KAAN,CAAY,GAAZ,CAAd;;AAEA,QAAII,KAAK,CAACC,MAAN,GAAe,CAAnB,EAAsB;AACpBD,MAAAA,KAAK,CAACE,IAAN,CAAW,EAAX;AACD;;AAED,UAAMC,IAAI,GAAGC,kBAAkB,CAACJ,KAAK,CAAC,CAAD,CAAN,CAA/B;AACA,UAAMK,KAAK,GAAGD,kBAAkB,CAACJ,KAAK,CAAC,CAAD,CAAN,CAAhC;AAEAH,IAAAA,IAAI,CAACM,IAAD,CAAJ,GAAaE,KAAb;AACD,GAXD;AAaA,SAAO;AACLC,IAAAA,WAAW,EAAET,IAAI,CAAC,eAAD,CADZ;AAELU,IAAAA,IAAI,EAAEV,IAAI,CAACW,UAFN;AAGLC,IAAAA,SAAS,EAAEC,MAAM,CAACb,IAAI,CAACc,UAAN;AAHZ,GAAP;AAKD","sourcesContent":["interface IToken {\n    accessToken: string;\n    type: string;\n    expiresIn: number;\n  }\n  \n  export default function getToken(hash: string): IToken {\n    const pieces = hash.split('&');\n    const data = {} as Record<string, string>;\n  \n    pieces.forEach(piece => {\n      const parts = piece.split('=');\n  \n      if (parts.length < 2) {\n        parts.push('');\n      }\n  \n      const name = decodeURIComponent(parts[0]);\n      const value = decodeURIComponent(parts[1]);\n  \n      data[name] = value;\n    });\n  \n    return {\n      accessToken: data['#access_token'],\n      type: data.token_type,\n      expiresIn: Number(data.expires_in),\n    };\n  }"]},"metadata":{},"sourceType":"module"}
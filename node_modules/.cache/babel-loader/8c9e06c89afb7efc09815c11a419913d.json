{"ast":null,"code":"import _regeneratorRuntime from\"/home/gimenezes/projects/ifood-frontend-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/gimenezes/projects/ifood-frontend-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';export var getFilters=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,filters;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('http://www.mocky.io/v2/5a25fade2e0000213aa90776');case 2:response=_context.sent;filters=response.data.filters;return _context.abrupt(\"return\",filters.map(function(filter){var valueItems=null;if(filter.values){valueItems=filter.values.map(function(value){return{name:value.value,label:value.name};});}return{id:filter.id,name:filter.name,values:valueItems,validation:filter.validation};}));case 5:case\"end\":return _context.stop();}}},_callee);}));return function getFilters(){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["/home/gimenezes/projects/ifood-frontend-test/src/Services/filterService.ts"],"names":["axios","getFilters","get","response","filters","data","map","filter","valueItems","values","value","name","label","id","validation"],"mappings":"mUAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAsCA,MAAO,IAAMC,CAAAA,UAAU,0FAAG,8KACDD,CAAAA,KAAK,CAACE,GAAN,CACrB,iDADqB,CADC,QAClBC,QADkB,eAKhBC,OALgB,CAKJD,QAAQ,CAACE,IALL,CAKhBD,OALgB,iCAOjBA,OAAO,CAACE,GAAR,CAAY,SAACC,MAAD,CAA6B,CAC9C,GAAIC,CAAAA,UAAU,CAAG,IAAjB,CAEA,GAAID,MAAM,CAACE,MAAX,CAAmB,CACjBD,UAAU,CAAGD,MAAM,CAACE,MAAP,CAAcH,GAAd,CAAkB,SAAAI,KAAK,CAAI,CACtC,MAAO,CACLC,IAAI,CAAED,KAAK,CAACA,KADP,CAELE,KAAK,CAAEF,KAAK,CAACC,IAFR,CAAP,CAID,CALY,CAAb,CAMD,CAED,MAAO,CACLE,EAAE,CAAEN,MAAM,CAACM,EADN,CAELF,IAAI,CAAEJ,MAAM,CAACI,IAFR,CAGLF,MAAM,CAAED,UAHH,CAILM,UAAU,CAAEP,MAAM,CAACO,UAJd,CAAP,CAMD,CAlBM,CAPiB,wDAAH,kBAAVb,CAAAA,UAAU,0CAAhB","sourcesContent":["import axios from 'axios';\n\nexport interface IFilter {\n  id: string;\n  name: string;\n  values?: IFilterItem[];\n  validation?: {\n    primitiveType: string;\n    entityType?: string;\n    pattern?: string;\n    min?: number;\n    max?: number;\n  };\n}\n\nexport interface IFilterItem {\n  name: string;\n  label: string;\n}\n\ninterface IFilterResponse {\n  id: string;\n  name: string;\n  values?: IFilterResponseItem[];\n  validation?: {\n    primitiveType: string;\n    entityType?: string;\n    pattern?: string;\n    min?: number;\n    max?: number;\n  };\n}\n\ninterface IFilterResponseItem {\n  name: string;\n  value: string;\n}\n\nexport const getFilters = async (): Promise<IFilter[]> => {\n  const response = await axios.get(\n    'http://www.mocky.io/v2/5a25fade2e0000213aa90776',\n  );\n\n  const { filters } = response.data;\n\n  return filters.map((filter: IFilterResponse) => {\n    let valueItems = null;\n\n    if (filter.values) {\n      valueItems = filter.values.map(value => {\n        return {\n          name: value.value,\n          label: value.name,\n        };\n      });\n    }\n\n    return {\n      id: filter.id,\n      name: filter.name,\n      values: valueItems,\n      validation: filter.validation,\n    } as IFilter;\n  });\n};\n"]},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["Styles/Themes/ifood.ts","Styles/Themes/spotify.ts","Hooks/themes.tsx","Services/API/configApi.ts","Services/authenticateService.ts","Hooks/auth.tsx","Utils/getToken.ts","Styles/GlobalStyles.ts","Hooks/playlistsHook.tsx","Hooks/index.tsx","Services/spotifyService.ts","Utils/applyMask.ts","Components/Content/styles.ts","Components/Content/index.tsx","Components/LateralMenu/styles.ts","Components/LateralMenu/index.tsx","Components/MainHeader/styles.ts","Utils/emojis.ts","Components/MainHeader/ButtonTheme/styles.ts","Components/MainHeader/ButtonTheme/index.tsx","Components/MainHeader/index.tsx","Components/LayoutPage/styles.ts","Components/LayoutPage/index.tsx","Pages/PlaylistsHome/styles.ts","Services/filterService.ts","Pages/PlaylistsHome/PlaylistFilters/styles.ts","Pages/PlaylistsHome/PlaylistFilters/index.tsx","Pages/PlaylistsHome/PlaylistCards/styles.ts","Pages/PlaylistsHome/PlaylistCards/index.tsx","Pages/PlaylistsHome/index.tsx","App.tsx","index.tsx","assets/icon.svg","assets/background-spotifood.jpg"],"names":["title","colors","first","second","third","white","black","gray","on","off","ThemeContext","createContext","ThemeProvider","children","useState","themeSaved","localStorage","getItem","JSON","parse","spotify","theme","setTheme","Provider","value","toggleTheme","ifood","setItem","stringify","useTheme","useContext","SCOPES","authenticate","authenticateUri","join","window","location","href","AuthContext","AuthProvider","storedToken","token","setToken","useLocation","useEffect","currentDate","Date","expiresAt","getTime","toString","removeItem","hash","pieces","split","data","forEach","piece","parts","length","push","name","decodeURIComponent","accessToken","type","token_type","expiresIn","Number","expires_in","getToken","setSeconds","getSeconds","createGlobalStyle","FilterContext","FilterProvider","filter","setFilter","updateFilter","useCallback","updatedFilter","useFilter","context","Error","AppProvider","getFeaturePlaylists","a","params","locale","country","timestamp","toISOString","limit","offset","axios","get","headers","Authorization","response","items","playlists","map","item","description","text","replace","Container","styled","div","props","Content","Header","LogoImg","img","Title","h3","LateralMenu","src","logo","alt","Profile","Welcome","Message","span","ToggleLabel","ThemeSelector","Switch","attrs","onColor","offColor","ButtonTheme","labelLeft","labelRight","checked","onChange","uncheckedIcon","checkedIcon","MainHeader","spotTheme","setSpotTheme","emoji","useMemo","indice","Math","floor","random","emojis","Grid","LayoutPage","SearchNameForm","ContainerLogin","background","ContentLogin","hasToken","css","Logo","h1","Button","button","getFilters","filters","valueItems","values","label","id","validation","Form","form","FormItem","PlaylistFilter","setLocale","setCountry","dateTime","setDateTime","setLimit","setOffset","selectedLocale","setSelectedLocale","selectedCountry","setSelectedCountry","selectedDateTime","setSelectedDateTime","selectedLimit","setSelectedLimit","selectedOffset","setSelectedOffset","then","onSubmit","event","preventDefault","classNamePrefix","placeholder","options","e","showTimeInput","placeholderText","selected","dateFormat","timeFormat","date","target","min","max","PlaylistCards","key","external_urls","images","url","PlaylistsHome","initialItems","setInitialItems","setItems","searchName","useRef","useAuth","getFilteredPlaylistItems","filteredItems","regex","RegExp","search","getPlaylistsItems","current","timerID","setInterval","clearInterval","size","onClick","App","GlobalStyles","path","exact","component","Playlists","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0a5092f5.chunk.js","sourcesContent":["export default {\n    title: 'Ifood',\n\n        colors: {\n            first: '#F5F3F4',\n            second: '#EA1D2C',\n            third: '#DA5D69',\n\n            white: '#FFF',\n            black: '#000',\n            gray: '#3e3e3e',\n\n            on: '#000',\n            off: '#DA5D69',\n        },\n};\n\n","export default {\n    title: 'Spotify',\n\n        colors: {\n            first: '#000',\n            second: '#1ED760',\n            third: '#15883E',\n\n            white: '#000',\n            black: '#FFF',\n            gray: '#BFBFBF',\n\n            on: '#000',\n            off: '#DA5D69',\n        },\n};","import React, { createContext, useState, useContext } from \"react\";\n\nimport ifood from \"../Styles/Themes/ifood\";\nimport spotify from \"../Styles/Themes/spotify\";\n\n\ninterface IThemeContext {\n  toggleTheme(): void;\n  theme: ITheme;\n}\n\ninterface ITheme {\n    title: string;\n\n    colors: {\n        first: string;\n      second: string;\n      third: string;\n\n        white: string;\n        black: string;\n        gray: string;\n\n        on: string;\n        off: string;\n  };\n}\n\nconst ThemeContext = createContext<IThemeContext>({} as IThemeContext);\n\nconst ThemeProvider: React.FC = ({ children }) => {\n  const [theme, setTheme] = useState<ITheme>(() => {\n    const themeSaved = localStorage.getItem('@spotifood:theme');\n    if (themeSaved) {\n      return JSON.parse(themeSaved);\n    } else {\n      return spotify\n    }\n  });\n\n  const toggleTheme = () => {\n    if (theme.title === \"Spotify\") {\n      setTheme(ifood);\n      localStorage.setItem('@spotifood:theme', JSON.stringify(ifood));\n    } else {\n      setTheme(spotify);\n      localStorage.setItem('@spotifood:theme', JSON.stringify(spotify));\n    }\n  };\n\n  return (\n    <ThemeContext.Provider value={{ toggleTheme, theme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nfunction useTheme(): IThemeContext {\n  const context = useContext(ThemeContext);\n\n  return context;\n}\n\nexport { ThemeProvider, useTheme };\n","export const AUTH_ENDPOINT = 'https://accounts.spotify.com/authorize';\nexport const CLIENT_ID = '1ff02f4e067e408fa2d3e5d6e8aad1a5';\nexport const REDIRECT_URI = 'http://localhost:3000/';\nexport const SCOPES = ['user-read-email'];\n\n","import {\n    AUTH_ENDPOINT,\n    CLIENT_ID,\n    REDIRECT_URI,\n    SCOPES,\n  } from '../Services/API/configApi';\n  \n  const authenticate = (): void => {\n    const authenticateUri = `${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&scope=${SCOPES.join(\n      '%20',\n    )}&response_type=token`;\n  \n    window.location.href = authenticateUri;\n  };\n  \n  export default authenticate;","import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport getToken from '../Utils/getToken';\nimport authenticate from '../Services/authenticateService';\n\ninterface AuthContextData {\n  token?: string | null;\n}\n\ninterface AuthProviderProps {\n  children: React.ReactNode;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nconst AuthProvider: React.FC<AuthProviderProps> = ({\n  children,\n}: AuthProviderProps) => {\n  const [token, setToken] = useState(() => {\n    const storedToken = localStorage.getItem('@Spotifood:token');\n\n    if (storedToken) {\n      return storedToken;\n    }\n\n    return null;\n  });\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!token) {\n      const { accessToken, expiresIn } = getToken(\n        location.hash,\n      );\n\n      if (accessToken) {\n        const expiresAt = new Date();\n        expiresAt.setSeconds(expiresAt.getSeconds() + expiresIn);\n\n        localStorage.setItem('@Spotifood:token', accessToken);\n        localStorage.setItem('@Spotifood:expiresAt', expiresAt.toString());\n\n        setToken(accessToken);\n      }\n    } else {\n      const currentDate = new Date();\n      const expiresAt = localStorage.getItem('@Spotifood:expiresAt');\n\n      if (\n        expiresAt &&\n        currentDate.getTime() > Date.parse(expiresAt.toString())\n      ) {\n        localStorage.removeItem('@Spotifood:token');\n        localStorage.removeItem('@Spotifood:expiresAt');\n\n        authenticate();\n      }\n    }\n\n    if (window.location.hash !== '') {\n      window.location.hash = '';\n    }\n  }, [token, location]);\n\n  return (\n    <AuthContext.Provider value={{ token }}>{children}</AuthContext.Provider>\n  );\n};\n\nfunction useAuth(): AuthContextData {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n\n  return context;\n}\n\nexport { AuthProvider, useAuth };\n","interface IToken {\n    accessToken: string;\n    type: string;\n    expiresIn: number;\n  }\n  \n  export default function getToken(hash: string): IToken {\n    const pieces = hash.split('&');\n    const data = {} as Record<string, string>;\n  \n    pieces.forEach(piece => {\n      const parts = piece.split('=');\n  \n      if (parts.length < 2) {\n        parts.push('');\n      }\n  \n      const name = decodeURIComponent(parts[0]);\n      const value = decodeURIComponent(parts[1]);\n  \n      data[name] = value;\n    });\n  \n    return {\n      accessToken: data['#access_token'],\n      type: data.token_type,\n      expiresIn: Number(data.expires_in),\n    };\n  }","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle `\n\n*{\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n    \n}\n\nhtml, body, #root {\n    height: 100%;\n}\n\n*, button, input {\n    border: 0;\n    outline: 0;\n    font-family: 'Secular One', sans-serif;\n    -webkit-font-smoothing: antialiased !important;\n    font-weight: 400;\n}\n\nbutton {\n    cursor: pointer;\n}\n`","import React, { createContext, useCallback, useContext, useState } from \"react\";\n\nimport { IFilterQuery } from \"../Services/spotifyService\";\n\ninterface IFilterContext {\n  filter?: IFilterQuery;\n  updateFilter(updatedFilter: IFilterQuery): void;\n}\n\ninterface IFilterContextProps {\n  children: React.ReactNode;\n}\n\nconst FilterContext = createContext<IFilterContext>({} as IFilterContext);\n\nconst FilterProvider: React.FC<IFilterContextProps> = ({\n  children,\n}: IFilterContextProps) => {\n  const [filter, setFilter] = useState<IFilterQuery>({} as IFilterQuery);\n\n  const updateFilter = useCallback((updatedFilter: IFilterQuery) => {\n    setFilter(updatedFilter);\n  }, []);\n\n  return (\n    <FilterContext.Provider value={{ filter, updateFilter }}>\n      {children}\n    </FilterContext.Provider>\n  );\n};\n\nfunction useFilter(): IFilterContext {\n  const context = useContext(FilterContext);\n\n  if (!context) {\n    throw new Error(\"useFilter must be used within an AuthProvider\");\n  }\n\n  return context;\n}\n\nexport { FilterProvider, useFilter };\n","import React from \"react\";\n\nimport { AuthProvider } from \"./auth\";\nimport { FilterProvider } from \"./playlistsHook\";\n\ninterface IAppProvider {\n  children: React.ReactNode;\n}\n\nconst AppProvider: React.FC<IAppProvider> = ({ children }: IAppProvider) => (\n  <AuthProvider>\n    <FilterProvider>{children}</FilterProvider>\n  </AuthProvider>\n);\n\nexport default AppProvider;\n","import axios from 'axios';\n\nimport applyMask from '../Utils/applyMask';\n\nexport interface IFilterQuery {\n  locale?: string;\n  country?: string;\n  timestamp?: Date | null;\n  limit?: string;\n  offset?: string;\n}\n\nexport interface IPlaylistItem {\n  description: string;\n  external_urls: {\n    spotify: string;\n  };\n  images: IPlaylistItemImage[];\n  id: string;\n  name: string;\n}\n\ninterface IPlaylistItemImage {\n  url: string;\n}\n\ninterface IQueryParams {\n  [key: string]: string;\n}\n\nexport const getFeaturePlaylists = async (\n  token: string,\n  filter?: IFilterQuery,\n): Promise<IPlaylistItem[]> => {\n  const params = {} as IQueryParams;\n\n  if (filter?.locale) {\n    params.locale = filter.locale;\n  }\n  if (filter?.country) {\n    params.country = filter.country;\n  }\n  if (filter?.timestamp) {\n    params.timestamp = filter.timestamp.toISOString();\n  }\n  if (filter?.limit) {\n    params.limit = filter.limit;\n  }\n  if (filter?.offset) {\n    params.offset = filter.offset;\n  }\n\n  const response = await axios.get(\n    'https://api.spotify.com/v1/browse/featured-playlists',\n    {\n      params,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    },\n  );\n\n  const { items } = response.data.playlists;\n\n  return items.map((item: IPlaylistItem) => ({\n    ...item,\n    description: applyMask(item.description),\n  }));\n};\n","export default function applyMask(text: string): string {\n    return text.replace(/<\\/?[^>]+(>|$)/g, '').toString();\n  }","import styled from 'styled-components';\n\nexport const Container = styled.div`\ngrid-area: CT;\nbackground-color: ${props => props.theme.colors.first} ;\npadding: 25px;\n\nheight: calc(100vh - 70px); \noverflow-y: scroll;\n\n::-webkit-scrollbar {\n    width: 10px;\n}\n\n::-webkit-scrollbar-thumb{\n    background-color: ${props => props.theme.colors.second};\n    border-radius: 10px;\n}\n`;","import React from \"react\";\n\nimport { Container } from \"./styles\";\n\nconst Content: React.FC = ({children}) => {\n  return (\n    <Container>\n     {children}\n    </Container>\n  );\n};\n\nexport default Content;","import styled from 'styled-components';\n\nexport const Container = styled.div`\ngrid-area: LM;\nbackground-color: ${props => props.theme.colors.white};\npadding-left: 40px;\nborder-right: 4px solid ${props => props.theme.colors.second};\n`;\n\nexport const Header = styled.div`\ndisplay: flex;\nalign-items: center;\nheight: 70px;\n`;\n\nexport const LogoImg = styled.img`\nheight:40px;\nwidth:40px;\n`;\n\nexport const Title = styled.h3`\ncolor: ${props => props.theme.colors.black};\nmargin-left: 20px;\n`;\n","import React from \"react\";\n\nimport logo from '../../assets/icon.svg';\nimport { Container, Header, LogoImg, Title} from \"./styles\";\n\nconst LateralMenu: React.FC = () => {\n\n  return (\n    <Container>\n      <Header>\n        <LogoImg src={logo} alt=\"logo Spotify\" />\n        <Title> SpotIfood </Title>\n      </Header>\n    </Container>\n  );\n};\n\nexport default LateralMenu;","import styled from 'styled-components';\n\nexport const Container = styled.div`\ngrid-area: MH;\nbackground-color: ${props => props.theme.colors.second};\ndisplay: flex;\njustify-content: space-around;\nalign-items: center;\npadding: 0 10px;\n`;\n\nexport const Profile = styled.div`\ncolor: ${props => props.theme.colors.white};\ntext-align: center;\n`;\nexport const Welcome = styled.h3``;\nexport const Message = styled.span`\nfont-size: 16px;\n`;","export default ['😀', '😁', '😄', '😅', '😇', '😉', '😍', '😎', '😜', '🤩'];","import styled from 'styled-components';\nimport Switch, { ReactSwitchProps } from 'react-switch';\n\nexport const Container = styled.div`\ndisplay: flex;\nalign-items:center;\n`;\n\nexport const ToggleLabel = styled.span`\ncolor: ${props => props.theme.colors.white}`;\n\nexport const ThemeSelector = styled(Switch).attrs<ReactSwitchProps>(\n    ({ theme }) => ({\n        onColor: theme.colors.on,\n        offColor: theme.colors.off,\n    })\n) <ReactSwitchProps> `\nmargin: 0 7px;\n`;","import React from \"react\";\n\nimport { Container, ThemeSelector, ToggleLabel } from \"./styles\";\n\ninterface IButtonProps {\n  labelLeft: string;\n  labelRight: string;\n  checked: boolean;\n  onChange(): void;\n}\n\nconst ButtonTheme: React.FC<IButtonProps> = ({labelLeft, labelRight, checked, onChange}) => (\n  <Container>\n        <ToggleLabel>{labelLeft}</ToggleLabel>\n        <ThemeSelector checked={checked} uncheckedIcon={false} checkedIcon={false} onChange={onChange} /> \n    <ToggleLabel>{labelRight}</ToggleLabel>\n  </Container>\n);\n\nexport default ButtonTheme;\n","import React, { useMemo, useState } from \"react\";\nimport { Container, Profile, Welcome, Message } from \"./styles\";\n\nimport emojis from \"../../Utils/emojis\";\n\nimport ButtonTheme from \"./ButtonTheme\";\nimport { useTheme } from \"../../Hooks/themes\";\n\n\nconst MainHeader: React.FC = () => {\n  const { toggleTheme, theme } = useTheme();\n  const [spotTheme, setSpotTheme] = useState(() =>\n    theme.title === \"Spotify\" ? true : false\n  );\n\n  const handleChangeTheme = () => {\n    setSpotTheme(!spotTheme);\n    toggleTheme();\n  }\n\n  const emoji = useMemo(() => {\n    const indice = Math.floor(Math.random() * emojis.length);\n    return emojis[indice];\n  }, []);\n\n  return (\n    <Container>\n      <ButtonTheme labelLeft=\"Ifood\" labelRight=\"Spotify\" checked={spotTheme} onChange={handleChangeTheme} />\n      <Profile>\n        <Welcome> Olá, {emoji} FoodLover!</Welcome>\n        <Message> Que tal um pouco de música?</Message>\n      </Profile>\n    </Container>\n  );\n};\n\nexport default MainHeader;\n","import styled from 'styled-components';\n\nexport const Grid = styled.div`\n\ndisplay: grid;\ngrid-template-columns: 250px auto;\ngrid-template-rows: 70px auto;\ngrid-template-areas: \n'LM MH'\n'LM CT';\nheight: 100vh;\n\n\n`;\n","import React from \"react\";\nimport Content from \"../Content\";\nimport LateralMenu from \"../LateralMenu\";\nimport MainHeader from \"../MainHeader\";\nimport { Grid } from \"./styles\";\n\nconst LayoutPage: React.FC = ({ children }) => {\n  return (\n    <Grid>\n      <MainHeader />\n      <LateralMenu />\n      <Content> {children} </Content>\n    </Grid>\n  );\n};\n\nexport default LayoutPage;\n","import styled, {css} from 'styled-components';\n\nimport background from '../../assets/background-spotifood.jpg';\n\ninterface IContentLogin {\n  hasToken: boolean;\n}\n\nexport const Container = styled.div`\n  min-height: 100vh;\n  display: flex;\n\n  @media (min-width: 500px) {\n    justify-content: start;\n    text-align: left;\n  }\n`;\n\nexport const Content = styled.div`\n  height: 100%;\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 1rem;\n`;\n\nexport const SearchNameForm = styled.div`\n  align-items: center;\n  background-color: #fff;\n  border: 2px solid #fff;\n  border-radius: 0.3rem;\n  display: flex;\n  padding: 0 1rem;\n  margin-bottom: 2.5rem;\n\n  svg {\n    color: #a8a8b3;\n  }\n\n  input {\n    border: none;\n    color: #3a3a3a;\n    flex: 1;\n    height: 2.8rem;\n    padding: 0 1rem;\n\n    &::placeholder {\n      color: #a8a8b3;\n    }\n  }\n`;\n\nexport const ContainerLogin = styled.div`\nbackground-image: url(${background});\nopacity: .9;\nbackground-size: cover;\nbackground-position: start;\nleft: 0;\ntop: 0;\nposition: relative;\nheight: 100vh;\nalign-items: center;\n\n`;\n\nexport const ContentLogin = styled.div<IContentLogin>`\n${props =>\n    !props.hasToken &&\n    css`\n    display: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\npadding-top: 120px;\n    `}\n\n  ${props =>\n    props.hasToken &&\n    css`\n    display: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\npadding-top: 120px;\n    `}\n`;\n\n\n\nexport const Logo = styled.div`\n`;\n\nexport const Title = styled.h1`\ncolor: #E1E6EA  ;\npadding: 20px;\n`;\n\nexport const Button = styled.button`\nmargin-top: 15px;\npadding: 5px;\nborder-radius: 16px;\nbackground-color: white;\ndisplay: flex;\njustify-content: space-evenly;\nalign-items: center;\nheight: 40px;\nwidth: 230px;\nfont-size: 16px;\ncolor: black;\n\ntransition: background .3s;\n\n&:hover{\n    background-image: linear-gradient(#EA1D2C, #1ED760);\n    color: white;\n}\n\nsvg {\n   color: #a8a8b3;\n}\n\n`;\n\n\n","import axios from 'axios';\n\nexport interface IFilter {\n  id: string;\n  name: string;\n  values?: IFilterItem[];\n  validation?: {\n    primitiveType: string;\n    entityType?: string;\n    pattern?: string;\n    min?: number;\n    max?: number;\n  };\n}\n\nexport interface IFilterItem {\n  name: string;\n  label: string;\n}\n\ninterface IFilterResponse {\n  id: string;\n  name: string;\n  values?: IFilterResponseItem[];\n  validation?: {\n    primitiveType: string;\n    entityType?: string;\n    pattern?: string;\n    min?: number;\n    max?: number;\n  };\n}\n\ninterface IFilterResponseItem {\n  name: string;\n  value: string;\n}\n\nexport const getFilters = async (): Promise<IFilter[]> => {\n  const response = await axios.get(\n    'http://www.mocky.io/v2/5a25fade2e0000213aa90776',\n  );\n\n  const { filters } = response.data;\n\n  return filters.map((filter: IFilterResponse) => {\n    let valueItems = null;\n\n    if (filter.values) {\n      valueItems = filter.values.map(value => {\n        return {\n          name: value.value,\n          label: value.name,\n        };\n      });\n    }\n\n    return {\n      id: filter.id,\n      name: filter.name,\n      values: valueItems,\n      validation: filter.validation,\n    } as IFilter;\n  });\n};\n","import 'react-datepicker/dist/react-datepicker.css';\n\nimport styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n  > button {\n    background-color: #1db954;\n    border: none;\n    border-radius: 0.3rem;\n    color: #fff;\n    font-weight: bold;\n    height: 2.4rem;\n    margin-top: 1rem;\n    width: 100%;\n    transition: background-color 0.2s;\n\n\n  }\n\n  @media (min-width: 500px) {\n    flex-direction: row;\n\n    > button {\n      margin-top: 0;\n      margin-left: 1rem;\n      width: calc(100% / 6);\n    }\n  }\n`;\n\nexport const FormItem = styled.div`\n  width: 100%;\n\n  & + div {\n    margin-top: 1rem;\n  }\n\n  .react-select__control {\n    border-radius: 0.3rem;\n    height: 2.4rem;\n    width: 100%;\n\n    .react-select__value-container {\n      padding: 0 0.5rem;\n\n      .react-select__placeholder {\n        color: #a8a8b3;\n        font-size: 0.9rem;\n      }\n\n      input {\n        color: #3a3a3a;\n        font-size: 0.9rem;\n      }\n    }\n  }\n\n  .react-select__menu {\n    .react-select__option {\n      color: #3a3a3a;\n    }\n  }\n\n  .react-datepicker-wrapper {\n    width: 100%;\n  }\n\n  > input, .react-datepicker-wrapper input {\n    border: 2px solid transparent;\n    border-radius: 0.3rem;\n    font-size: 0.9rem;\n    height: 2.4rem;\n    padding: 0 0.5rem;\n    width: 100%;\n\n    &::placeholder {\n      color: #a8a8b3;\n    }\n  }\n\n  @media (min-width: 500px) {\n    width: calc(100% / 6);\n\n    & + div {\n      margin-top: 0;\n      margin-left: 1rem;\n    }\n  }\n`;\n","import React, { useState, useEffect, ChangeEvent, FormEvent } from \"react\";\n\nimport Select from \"react-select\";\n// import DatePicker from 'react-datepicker';\nimport ReactDatePicker from 'react-datepicker'\n\nimport { useFilter } from '../../../Hooks/playlistsHook';\n\nimport {\n  IFilter,\n  IFilterItem,\n  getFilters,\n} from '../../../Services/filterService';\n\nimport { Form, FormItem } from \"./styles\";\n\nconst PlaylistFilter: React.FC = () => {\n  const [locale, setLocale] = useState<IFilter>({} as IFilter);\n  const [country, setCountry] = useState<IFilter>({} as IFilter);\n  const [dateTime, setDateTime] = useState<IFilter>({} as IFilter);\n  const [limit, setLimit] = useState<IFilter>({} as IFilter);\n  const [offset, setOffset] = useState<IFilter>({} as IFilter);\n\n  const [selectedLocale, setSelectedLocale] = useState(\"\");\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\n  const [selectedDateTime, setSelectedDateTime] = useState<Date | null>(null);\n  const [selectedLimit, setSelectedLimit] = useState(\"\");\n  const [selectedOffset, setSelectedOffset] = useState(\"\");\n\n  const { updateFilter } = useFilter();\n\n  useEffect(() => {\n    getFilters().then((filters) => {\n      filters.forEach((filter) => {\n        if (filter.id === \"locale\") {\n          setLocale(filter);\n        } else if (filter.id === \"country\") {\n          setCountry(filter);\n        } else if (filter.id === \"timestamp\") {\n          setDateTime(filter);\n        } else if (filter.id === \"limit\") {\n          setLimit(filter);\n        } else if (filter.id === \"offset\") {\n          setOffset(filter);\n        }\n      });\n    });\n  }, []);\n\n  function handleLimit(event: ChangeEvent<HTMLInputElement>) {\n    const value = Number(event.target.value);\n\n    if (!value) {\n      setSelectedLimit(\"\");\n    }\n\n    if (\n      limit.validation &&\n      (value < Number(limit.validation.min) ||\n        value > Number(limit.validation?.max))\n    ) {\n      return;\n    }\n\n    setSelectedLimit(value.toString());\n  }\n\n  function handlePlaylistFilter(event: FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    updateFilter({\n      locale: selectedLocale,\n      country: selectedCountry,\n      timestamp: selectedDateTime,\n      limit: selectedLimit,\n      offset: selectedOffset,\n    });\n  }\n\n  return (\n    <Form onSubmit={handlePlaylistFilter}>\n      <FormItem>\n        <Select\n          classNamePrefix=\"react-select\"\n          placeholder={locale.name}\n          options={locale.values}\n          onChange={(e) => setSelectedLocale((e as IFilterItem)?.name)}\n        />\n      </FormItem>\n      <FormItem>\n        <Select\n          classNamePrefix=\"react-select\"\n          placeholder={country.name}\n          options={country.values}\n          onChange={(e) => setSelectedCountry((e as IFilterItem)?.name)}\n        />\n      </FormItem>\n      <FormItem>\n        <ReactDatePicker\n          showTimeInput\n          name={dateTime.id}\n          placeholderText={dateTime.name}\n          selected={selectedDateTime}\n          dateFormat=\"yyyy/MM/dd HH:mm\"\n          timeFormat=\"HH:mm\"\n          onChange={(date) => setSelectedDateTime(date as Date)}\n        />\n      </FormItem>\n      <FormItem>\n        <input\n          name={limit.id}\n          placeholder={limit.name}\n          value={selectedLimit}\n          onChange={handleLimit}\n          type=\"number\"\n        />\n      </FormItem>\n      <FormItem>\n        <input\n          name={offset.id}\n          placeholder={offset.name}\n          value={selectedOffset}\n          onChange={(e) => setSelectedOffset(e.target.value)}\n          type=\"number\"\n        />\n      </FormItem>\n      <button type=\"submit\">Filtrar</button>\n    </Form>\n  );\n};\n\nexport default PlaylistFilter;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 3rem 0;\n\n  a {\n    display: flex;\n    align-items: center;\n\n    background-color: #303030;\n    border-radius: 0.7rem;\n    color: #fff;\n    padding: 1rem;\n    text-decoration: none;\n    transition: transform 0.2s;\n\n    & + a {\n      margin-top: 1rem;\n    }\n\n    &:hover {\n      transform: translateX(0.8rem);\n    }\n\n    img {\n      border-radius: 0.7rem;\n      height: 7rem;\n      width: 7rem;\n    }\n\n    div {\n      flex: 1;\n      margin-left: 1rem;\n\n      strong {\n        display: block;\n        font-size: 1.2rem;\n        line-height: 1.5rem;\n        margin-bottom: 0.5rem;\n      }\n\n      p {\n        color: #c2c2c2;\n        line-height: 1.3rem;\n      }\n    }\n  }\n`;\n","import React from \"react\";\n\nimport { IPlaylistItem } from \"../../../Services/spotifyService\";\n\nimport { Container} from \"./styles\";\n\ninterface IPlaylistProps {\n  items: IPlaylistItem[];\n}\n\nconst PlaylistCards: React.FC<IPlaylistProps> = ({ items }: IPlaylistProps) => {\n  return (\n    <Container>\n      {items.map(item => (\n        <a key={item.id} href={item.external_urls.spotify}>\n          <img src={item.images[0].url} alt={item.name} />\n\n          <div>\n            <strong>{item.name}</strong>\n            <p>{item.description}</p>\n          </div>\n        </a>\n      ))}\n    </Container>\n  );\n};\n\nexport default PlaylistCards;\n","import React, {\n  ChangeEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\n\nimport { FiSearch } from \"react-icons/fi\";\nimport { FaSpotify } from \"react-icons/fa\";\n\nimport { useFilter } from \"../../Hooks/playlistsHook\";\nimport { useAuth } from \"../../Hooks/auth\";\nimport {\n  getFeaturePlaylists,\n  IPlaylistItem,\n} from \"../../Services/spotifyService\";\nimport authenticate from \"../../Services/authenticateService\";\n\nimport LayoutPage from \"../../Components/LayoutPage\";\nimport {\n  Container,\n  Content,\n  ContentLogin,\n  Logo,\n  SearchNameForm,\n  Title,\n  Button, ContainerLogin\n} from \"./styles\";\nimport PlaylistFilter from \"./PlaylistFilters\";\nimport PlaylistCards from \"./PlaylistCards\";\n\nconst PlaylistsHome: React.FC = () => {\n  const [initialItems, setInitialItems] = useState<IPlaylistItem[]>([]);\n  const [items, setItems] = useState<IPlaylistItem[]>([]);\n\n  const searchName = useRef(\"\");\n\n  const { token } = useAuth();\n  const { filter } = useFilter();\n\n  function getFilteredPlaylistItems(playlists: IPlaylistItem[], name: string) {\n    let filteredItems = playlists;\n\n    if (name) {\n      const regex = new RegExp(`${name}.+$`, \"i\");\n\n      filteredItems = playlists.filter((item) => {\n        return item.name.search(regex) !== -1;\n      });\n    }\n\n    setItems(filteredItems);\n  }\n\n  function handleSearchPlaylistByName(event: ChangeEvent<HTMLInputElement>) {\n    searchName.current = event.target.value;\n\n    getFilteredPlaylistItems(initialItems, searchName.current);\n  }\n\n  const getPlaylistsItems = useCallback(() => {\n    if (token) {\n      getFeaturePlaylists(token, filter).then((playlists) => {\n        setInitialItems(playlists);\n        getFilteredPlaylistItems(playlists, searchName.current);\n      });\n    }\n  }, [token, filter]);\n\n  useEffect(() => {\n    getPlaylistsItems();\n\n    const timerID = setInterval(() => {\n      getPlaylistsItems();\n    }, 30000);\n\n    return () => clearInterval(timerID);\n  }, [getPlaylistsItems]);\n\n  return (\n    <Container>\n      <Content>\n        {!token && (\n          <ContainerLogin>\n            <ContentLogin hasToken={token?.length !== 0}>\n              <Logo>\n                <FaSpotify size={70} />\n              </Logo>\n              <Title>Acesse para encontrar as melhores playlists</Title>\n              <Button onClick={authenticate}>\n                <FaSpotify size={20} /> Conectar com Spotify\n              </Button>\n            </ContentLogin>\n          </ContainerLogin>\n        )}\n\n        {token && (\n          <LayoutPage>\n            <SearchNameForm>\n              <FiSearch size={20} />\n              <input\n                onChange={handleSearchPlaylistByName}\n                placeholder=\"Pesquisar por nome...\"\n              />\n            </SearchNameForm>\n\n            <PlaylistFilter />\n            {items && <PlaylistCards items={items} />}\n          </LayoutPage>\n        )}\n      </Content>\n    </Container>\n  );\n};\n\nexport default PlaylistsHome;\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport { ThemeProvider } from \"styled-components\";\nimport GlobalStyles from \"./Styles/GlobalStyles\";\n\nimport AppProvider from \"./Hooks\";\nimport { useTheme } from \"./Hooks/themes\";\n\nimport Playlists from \"./Pages/PlaylistsHome\";\n\n\nconst App: React.FC = () => {\n  const { theme } = useTheme();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <BrowserRouter>\n        <AppProvider>\n          <Route path=\"/\" exact component={Playlists} />\n        </AppProvider>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { ThemeProvider } from \"./Hooks/themes\";\nimport { AuthProvider } from \"./Hooks/auth\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/icon.977b3a3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/background-spotifood.905a3ab3.jpg\";"],"sourceRoot":""}
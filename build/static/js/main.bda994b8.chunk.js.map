{"version":3,"sources":["components/layouts/Header.js","components/Playlists/Search.js","components/Playlists/FilterPlaylists.js","components/Playlists/Playlists.js","components/layouts/Footer.js","actions/actionTypes/playlists.js","actions/actionTypes/filterPlaylists.js","helpers/getToken.js","actions/playlists.js","helpers/convertToIso.js","container/LandingPage.js","actions/filterPlaylists.js","components/common/Button.js","App.js","reducer/playlists.js","reducer/playlistsFilters.js","reducer/rootReducer.js","store/index.js","serviceWorker.js","index.js"],"names":["Header","button","icon","headersize","className","Search","handleSearchChange","Input","name","placeholder","onChange","returnOptions","data","options","length","forEach","element","option","key","value","text","push","FilterPlaylists","values","playlistsFilters","handleChange","locale","filter","item","id","countries","country","Dropdown","fluid","search","selection","min","type","max","Playlists","state","playlistName","searchResult","handleSearch","searchText","result","props","playlists","toLowerCase","startsWith","setState","e","target","this","playlistsToDisplay","map","Card","Image","src","images","url","wrapped","ui","description","tracks","total","Component","Footer","FETCH_PLAYLISTS_SUCCESS","FETCH_PLAYLISTS_ERROR","FETCH_PLAYLISTS_FILTER_SUCCESS","FETCH_PLAYLISTS_FILTER_ERROR","getToken","hashString","hash","substring","split","reduce","initial","parts","decodeURIComponent","window","location","access_token","convertToIso","selectedData","date","moment","toISOString","console","log","LandingPage","filters","limit","timestamp","offset","updatingState","_","fetchPlaylists","fetchPlaylistsFilters","setInterval","error","status","replace","Dimmer","active","Loader","size","connect","filterParams","dispatch","axios","get","headers","params","then","playlistActionTypes","payload","items","catch","playlisFilterActionTypes","dotenv","config","Button","href","process","App","exact","path","Icon","color","initialState","combineReducers","action","response","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bda994b8.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Header = ({button, icon, headersize}) => {\n    return (\n        <>\n       <div className={`header ${headersize}`}>\n            <div className=\"header__text-box\">\n                <h1 className=\"header__text-box__spotifood\">\n                    <span className=\"welcome\">Welcome to </span>\n                    <span>Spotifood</span>\n                </h1>\n\n                <p>\n                    <span className=\"quote\">\"If music be the food of love, play on.\"</span>\n                    <br/>\n                    <span className=\"quote italic\">â€“ William Shakespeare</span>\n                </p>\n                {button ? button : icon}\n                \n            </div>\n       </div>\n       </>\n    )\n}\n\nexport default Header;\n","import React from 'react'\nimport { Input } from 'semantic-ui-react'\n\n\nconst Search = ({ handleSearchChange }) => {\n    return (\n        <div className=\"search-input-container\">\n            <Input\n                name='playlistName'\n                icon='search'\n                placeholder='Search...'\n                className=\"search-input\"\n                onChange={handleSearchChange}\n            />\n        </div>\n\n    )\n}\n\nexport default Search\n","import React from 'react'\nimport { Dropdown } from 'semantic-ui-react'\n\nconst returnOptions = (data) => {\n    let options = [];\n    data && data.length > 0 &&\n    data.forEach(element => {\n        let option = {\n            key: element.value,\n            text: element.name,\n            value: element.value\n        };\n    options.push(option)    \n    }); \n    return options;\n}\n\n\nconst FilterPlaylists = ({playlistsFilters, handleChange}) => {\n    const locale = playlistsFilters.filter((item) => item.id === 'locale')\n    let values\n    if(locale && locale.length > 0){\n        values = returnOptions(locale[0].values)\n    }\n    const country = playlistsFilters.filter((item) => item.id === 'country')\n    let countries\n    if(country && country.length > 0){\n        countries = returnOptions(country[0].values)\n    }\n\n    return (\n        <div className='plyalist-filters'>\n            <Dropdown\n                placeholder='Select Locale'\n                name='locale'\n                fluid\n                search\n                selection\n                className=\"filter-dropdown\"\n                onChange={handleChange}\n                options={values || []}\n            />\n\n            <Dropdown\n                placeholder='Select Country'\n                selection\n                search\n                name='country'\n                fluid\n                className=\"filter-dropdown\"\n                options={countries || []}\n                onChange={handleChange}\n            />\n\n            <input\n                className='filter-limit'\n                min='1'\n                type='number'\n                max=\"50\"\n                placeholder='Limit number'\n                name='limit'\n                onChange={handleChange}\n            />\n\n            <input\n                className='filter-limit'\n                type='date'\n                name='timestamp'\n                onChange={handleChange}\n            />\n            \n\n            <input\n                className='filter-limit'\n                min={1}\n                type='number'\n                max={50}\n                placeholder='Offset Number'\n                name='offset'\n                onChange={handleChange}\n            />\n        </div>\n    )\n}\n\nexport default FilterPlaylists\n","import React, { Component } from 'react';\nimport { Card, Image } from 'semantic-ui-react'\nimport Search from './Search'\nimport FilterPlaylists from './FilterPlaylists'\n\nclass Playlists extends Component {\n    state = {\n        playlistName: '',\n        searchResult: []\n    }\n\n    handleSearch = (searchText) => {\n        const { playlists } = this.props\n        const result =  playlists.filter(item => item.name.toLowerCase().startsWith(searchText))\n        this.setState({\n            ...this.state,\n            searchResult: result\n        })\n    }\n\n    handleSearchChange = (e) => {\n        const { name, value } = e.target\n\n        this.setState({\n            ...this.state,\n            [name]: value\n        }, () => {\n            this.handleSearch(value.toLowerCase())\n        })\n    }\n\n    render() {\n        const {\n            playlists,\n            playlistsFilters,\n            handleChange,\n            value\n        } = this.props\n        const { searchResult } = this.state\n\n        const playlistsToDisplay = (searchResult && searchResult.length > 0) ? searchResult : playlists\n\n        return (\n            <>{playlistsToDisplay &&\n                playlistsToDisplay.length > 0 &&\n                <>\n                <div className=\"main-container\">\n                    <Search\n                        handleSearchChange={this.handleSearchChange}\n                    />\n                    <FilterPlaylists\n                        playlistsFilters={playlistsFilters}\n                        handleChange={handleChange}\n                        value={value}\n                    />\n                    <div className='playlists-container'>\n                        {playlistsToDisplay &&\n                            playlistsToDisplay.map((item) => (\n                                <Card className='playlist-card' key={item.id}>\n                                    <Image\n                                        className='playlist-card__playlist-image'\n                                        src={`${item.images[0].url}`} wrapped ui={false}\n                                    />\n                                    <div className=\"playlist-card__playlist-content\">\n                                        <h3 className=\"playlist-name\">{item.name}</h3>\n                                        <p className=\"playlist-description\">{item.description}</p>\n                                        <p className='tracks'>{`${item.tracks.total} Songs`}</p>\n                                    </div>\n                                </Card>\n                            ))\n                        }\n                    </div>\n                </div>\n            </>}\n            </>\n        );\n    }\n}\n \nexport default Playlists;\n","import React from 'react'\n\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\">\n            <div className=\"footer__quote\">\n                <p className=\"quote\">\"If music be the food of love, play on.\"</p>\n                <p className=\"quote italic margin-left\">â€“ William Shakespeare</p>\n            </div>\n            <div>\n                <div className=\"footer__copyright\">\n                    <p className=\"margin-left\">Built by Joseph Joe.</p>\n                    <p className=\"italic\">Copyright &copy; by Spotifood.</p>\n                </div>\n            </div>\n       </div>\n    )\n}\n\nexport default Footer\n","export const FETCH_PLAYLISTS_SUCCESS = 'FETCH_PLAYLISTS_SUCCESS';\nexport const FETCH_PLAYLISTS_ERROR = 'FETCH_PLAYLISTS_ERROR';","export const FETCH_PLAYLISTS_FILTER_SUCCESS = 'FETCH_PLAYLISTS_FILTER_SUCCESS';\nexport const FETCH_PLAYLISTS_FILTER_ERROR = 'FETCH_PLAYLISTS_FILTER_ERROR';","const getToken = (hashString) => {\n    let hash\n    hashString.substring(1)\n    .split(\"&\")\n    .reduce((initial, item) => {\n      if (item) {\n        var parts = item.split(\"=\");\n        initial[parts[0]] = decodeURIComponent(parts[1]);\n      }\n      hash = initial\n      return initial;\n    },{});\n    return hash\n}\n\nexport default getToken","import { playlistActionTypes } from './actionTypes';\nimport getToken from '../helpers/getToken'\nimport axios from 'axios'\n\n\nconst hash = window.location.hash\nconst url = 'https://api.spotify.com/v1/browse/featured-playlists'\nconst { access_token } = getToken(hash)\n\nexport const fetchPlaylists = (filterParams) => dispatch => {\n  axios.get(url, {\n    headers: {\n      'Authorization': `Bearer ${access_token}`\n    },\n    params: filterParams\n  })\n    .then(playlists =>\n      dispatch({\n        type: playlistActionTypes.FETCH_PLAYLISTS_SUCCESS,\n        payload: playlists.data.playlists.items\n      })\n    ).catch(error => {\n      dispatch({\n        type: playlistActionTypes.FETCH_PLAYLISTS_ERROR,\n        payload: error\n      })\n    });\n};\n","import moment from 'moment'\n\n\nconst convertToIso = (selectedData) => {\n    let date = moment(selectedData).toISOString();\n    date = date.substring(0, date.length-1);\n    console.log('toISO DATA ===', date)\n\n    return date\n}\n\nexport default convertToIso","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport Header from '../components/layouts/Header'\nimport Playlists from '../components/Playlists/Playlists'\nimport Footer from '../components/layouts/Footer'\nimport { Dimmer, Loader } from 'semantic-ui-react'\nimport { fetchPlaylists } from '../actions/playlists';\nimport { fetchPlaylistsFilters } from '../actions/filterPlaylists';\nimport convertToIso from '../helpers/convertToIso'\n\n\nclass LandingPage extends Component {\n    state = {\n        filters: {\n            locale: null,\n            country: null,\n            limit: null,\n            timestamp: null,\n            offset: null\n        }\n    }\n\n    updatingState = (name, value) => {\n        if(value === ''){\n            return null\n        }\n        if(name === 'timestamp'){\n            return convertToIso(value)\n        }else{\n            return value\n        }\n    }\n     \n\n    handleChange = (_, data) => {\n        const { fetchPlaylists } = this.props;\n        const { filters } = this.state\n            this.setState({\n                filters: {\n                    ...filters,\n                    [_&& _.target.name] : _ && this.updatingState(_.target.name, _.target.value),\n                    [data && data.name]: data ? data.value : _.target.value\n                }\n            }, () => {\n                console.log('Byagenze gute???', this.state.filters)\n                fetchPlaylists(this.state.filters)\n            })\n        \n    }\n\n    componentDidMount () {\n        const { fetchPlaylists, fetchPlaylistsFilters } = this.props;\n        fetchPlaylistsFilters()\n        fetchPlaylists()\n        setInterval(() => fetchPlaylists(), 30000)\n    }\n\n    render() { \n        const {playlists, error, icon, playlistsFilters} = this.props;\n        const { filters } = this.state\n        if( error && error.error.status === 401){\n            window.location.replace('http://localhost:3006/')\n        }\n        return (\n            <div>\n                {playlists &&\n                playlists.length > 0 ?\n                <>\n                    <Header icon={icon}/>\n                    <Playlists\n                        playlists={playlists}\n                        playlistsFilters={playlistsFilters}\n                        handleChange={this.handleChange}\n                        value={filters}\n                    />\n                    <Footer />\n                </>:\n                <>\n                <Dimmer active>\n                    <Loader size='medium'>Loading</Loader>\n                </Dimmer>\n                <Header headersize='cover' icon={icon}/>\n                </>\n                \n                }\n            </div>\n        );\n    }\n}\n \nconst mapStateToProps = state => ({\n    playlists: state.playlists.playlists,\n    error: state.playlists.error,\n\n    playlistsFilters: state.playlistsFilters.playlistsFilters\n  });\n  \nexport default connect(\n    mapStateToProps, \n    {\n        fetchPlaylists,\n        fetchPlaylistsFilters \n})(LandingPage);\n","import { playlisFilterActionTypes } from './actionTypes';\nimport axios from 'axios'\n\n\nconst url = 'http://www.mocky.io/v2/5a25fade2e0000213aa90776'\n\nexport const fetchPlaylistsFilters = () => dispatch => {\n  axios.get(url)\n    .then(data =>\n      dispatch({\n        type: playlisFilterActionTypes.FETCH_PLAYLISTS_FILTER_SUCCESS,\n        payload: data\n      })\n    ).catch(error => {\n        console.log('Byanze mfash', error)\n      dispatch({\n        type: playlisFilterActionTypes.FETCH_PLAYLISTS_FILTER_ERROR,\n        payload: error\n      })\n    });\n};\n","import React from 'react'\nimport dotenv from 'dotenv'\n\ndotenv.config()\n\nconst clientId = process.env.REACT_APP_ClientID\nconst redirectUrl = 'http%3A%2F%2Flocalhost%3A3006%2Fplaylists'\n\nconst Button = () => {\n    return (\n        <a href={`https://accounts.spotify.com/authorize?client_id=${clientId}&redirect_uri=${redirectUrl}&response_type=token&show_dialog=true`}>\n            <button className=\"header__login-btn\">Login with Spotify</button>\n        </a>\n    )\n}\n\nexport default Button\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Icon } from 'semantic-ui-react'\nimport './App.css';\nimport Header from './components/layouts/Header'\nimport LandingPage from './container/LandingPage'\nimport Button from './components/common/Button'\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path='/'><Header button = {<Button/>} headersize='cover'/></Route>\n        <Route path='/playlists'> <LandingPage icon={<Icon className='arrow down' color='orange' size=\"big\"/>} /> </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { playlistActionTypes } from '../actions/actionTypes';\n\nconst initialState = {\n  playlists: [],\n  error: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case playlistActionTypes.FETCH_PLAYLISTS_SUCCESS:\n      return {\n        ...state,\n        playlists: action.payload\n      };\n    case playlistActionTypes.FETCH_PLAYLISTS_ERROR:\n      return {\n        ...state,\n        error: action.payload.response.data\n      };\n    default:\n      return state;\n  }\n}\n","import { playlisFilterActionTypes } from '../actions/actionTypes';\n\nconst initialState = {\n  playlistsFilters: [],\n  error: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case playlisFilterActionTypes.FETCH_PLAYLISTS_FILTER_SUCCESS:\n      return {\n        ...state,\n        playlistsFilters: action.payload.data.filters\n      };\n    case playlisFilterActionTypes.FETCH_PLAYLISTS_FILTER_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport playlistsReducer from './playlists';\nimport playlistsFilterReducer from './playlistsFilters'\n\nexport default combineReducers({\n  playlists: playlistsReducer,\n  playlistsFilters: playlistsFilterReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducer/rootReducer';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { Provider } from 'react-redux'\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App';\nimport store from './store'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n  </React.StrictMode>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}